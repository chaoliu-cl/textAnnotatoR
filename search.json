[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement chaoliu@cedarville.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/articles/practical_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"vignette provides step--step practical example using textAnnotatoR package qualitative analysis. ’ll work complete example project, importing text analyzing coded content. ’ll learn : Set project Import text data Annotate text Manage project files (saving, loading, organizing) Analyze patterns within coded data Export results","code":""},{"path":"/articles/practical_example.html","id":"setting-up-textannotator","dir":"Articles","previous_headings":"","what":"Setting Up textAnnotatoR","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"diving sample project, let’s understand properly set textAnnotatoR navigate interface.","code":""},{"path":"/articles/practical_example.html","id":"installation","dir":"Articles","previous_headings":"Setting Up textAnnotatoR","what":"Installation","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"haven’t installed textAnnotatoR yet, can install GitHub:","code":"# Install devtools if not already installed if (!requireNamespace(\"devtools\", quietly = TRUE)) {   install.packages(\"devtools\") }  # Install textAnnotatoR devtools::install_github(\"chaoliu-cl/textAnnotatoR\")"},{"path":"/articles/practical_example.html","id":"first-time-setup","dir":"Articles","previous_headings":"Setting Up textAnnotatoR","what":"First-Time Setup","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"first time run textAnnotatoR, ask confirm want store project data: ’ll see dialog asking choose : 1) Default Location: folder managed R user directory 2) Custom Location: directory choice 3) Project-specific Location: customizable directory unique project","code":"library(textAnnotatoR) annotate_gui()"},{"path":"/articles/practical_example.html","id":"understanding-the-interface","dir":"Articles","previous_headings":"Setting Up textAnnotatoR","what":"Understanding the Interface","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"textAnnotatoR launches, ’ll see several tabs: File: Import text manage projects Code Memo: managing codes adding memos Themes: Organize codes themes hierarchies Analysis: Analyze coding patterns Records: View annotations tabular format Comparison: Compare coding different coders","code":""},{"path":"/articles/practical_example.html","id":"sample-project-analyzing-interview-responses","dir":"Articles","previous_headings":"","what":"Sample Project: Analyzing Interview Responses","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"example, ’ll analyzing fictional interview responses remote work experiences. example demonstrates might use textAnnotatoR real qualitative research context.","code":""},{"path":"/articles/practical_example.html","id":"step-1-creating-a-new-project","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 1: Creating a New Project","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"first launch textAnnotatoR, automatically creates blank project. However, want start new project, click “New Project” top toolbar  unsaved changes current project, ’ll see confirmation dialog asking want save current project first:","code":""},{"path":"/articles/practical_example.html","id":"step-2-importing-text-data","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 2: Importing Text Data","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"example, ’ll use following interview excerpt. can copy text file named remote_work_interview.txt:","code":"Interviewer: Can you describe your experience transitioning to remote work?  Participant: It was definitely challenging at first. I think the biggest issues were setting up a proper workspace at home and establishing boundaries between work and personal life. It took me about a month to develop a routine that worked. Now, I actually prefer working remotely. I'm more productive without office distractions, and I save two hours daily by not commuting.  Interviewer: What tools or resources have been most helpful?  Participant: Video conferencing has been essential - we use Zoom for all our meetings. We also rely heavily on Slack for quick communications and Asana for project management. My company provided a second monitor and an ergonomic chair, which made a huge difference in my physical comfort. I'd say the technology was easy to adapt to, but the social aspects were harder. It's difficult to replace those impromptu conversations by the coffee machine.  Interviewer: How has remote work affected your work-life balance?  Participant: It's a double-edged sword. I have more flexibility and time with family, but it's also harder to disconnect. Sometimes I find myself checking emails well into the evening, which wasn't a habit before. I've had to be intentional about setting working hours and sticking to them. Taking short walks during the day has become my substitute for the natural breaks that happened in the office."},{"path":"/articles/practical_example.html","id":"step-3-saving-your-project","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 3: Saving Your Project","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"’s important save project regularly. , click “Save Project”  , dialog appear:  Type project name Click “Choose Directory” select save project Directories displayed hierarchical format - navigate desired location Click “Save” save project project saved RDS file, preserves annotations, codes, project structure.","code":""},{"path":"/articles/practical_example.html","id":"step-4-annotating-the-text","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 4: Annotating the Text","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"Now let’s start coding interview text: Click selection tool (cursor icon) right margin Select text discussing home workspace setup “Code Memo” tab, enter “Home Setup” code Add memo: “Initial challenge transition remote work” Click “Save” save code  Continue process notable segments text. example: Code Zoom, Slack, Asana “Technology” Code “save two hours daily commuting” “Save Time” Code discussions missed impromptu conversations “Social Isolation” annotated text begin look like , different colored highlights representing different codes:","code":""},{"path":"/articles/practical_example.html","id":"applying-existing-codes","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 4: Annotating the Text","what":"Applying Existing Codes","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"’ve created codes, can apply new text segments: Highlight target text Click “Apply Code” side panel Choose code want apply dropdown menu","code":""},{"path":"/articles/practical_example.html","id":"managing-codes","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 4: Annotating the Text","what":"Managing Codes","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"coding progresses, ’ll want manage codes efficiently. can click highlighted text : Remove annotation Replace code Rename code Delete code","code":""},{"path":"/articles/practical_example.html","id":"merging-similar-codes","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 4: Annotating the Text","what":"Merging Similar Codes","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"instances, might find codes conceptually similar overlapping. textAnnotatoR provides “Merge Codes” feature consolidate : Go “Code Memo” tab “Codes” section, select two codes checking boxes next Click “Merge Codes” button Enter descriptive name encompasses concepts merged Click “Merge” confirm  feature particularly useful : initial coding granular now want broader categories Multiple codes emerged represent underlying concept want simplify coding scheme analysis reporting","code":""},{"path":"/articles/practical_example.html","id":"step-5-loading-your-project","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 5: Loading Your Project","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"need continue work later, ’ll need load saved project: Click “Load Project”.  dialog appear: Click “Choose Project File” navigate saved project file Navigate directory structure find project Select RDS file click “Select” Click “Load” load project text, annotations, codes, memos restored exactly left .","code":""},{"path":"/articles/practical_example.html","id":"step-6-analyzing-the-coded-data","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 6: Analyzing the Coded Data","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"’ve coded entire interview, use analysis tools examine patterns:","code":""},{"path":"/articles/practical_example.html","id":"code-frequency-analysis","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 6: Analyzing the Coded Data","what":"Code Frequency Analysis","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"Go “Analysis” tab click “Code Frequency”. show codes mentioned often:  example, might see “Making adjustment” “Technology” appear frequently, indicating significant aspects remote work experience participant.","code":""},{"path":"/articles/practical_example.html","id":"code-co-occurrence-analysis","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 6: Analyzing the Coded Data","what":"Code Co-occurrence Analysis","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"Click “Code Co-occurrence” see relationships different codes:  visualization might reveal “Boundary difficulty” “Family friendly” frequently co-occur, suggesting relationship issues.","code":""},{"path":"/articles/practical_example.html","id":"text-statistics","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 6: Analyzing the Coded Data","what":"Text Statistics","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"“Analysis” tab also provides basic text statistics: Word count Character count Sentence count Percentage text coded statistics can help track coding progress provide context analysis.","code":""},{"path":"/articles/practical_example.html","id":"step-7-creating-themes","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 7: Creating Themes","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"Sometimes multiple codes may share underlying theme may want create theme encompasses several codes. Let’s create logical hierarchy themes codes. Go “Themes” tab: Click “Add Theme” create following themes: “Challenges” “Benefits” “Tools” “Work-Life Balance” theme, add relevant codes: “Challenges”: Click “Add Code Theme” Select “Challenges” parent theme Add codes like “Technical Issues”, “Social Isolation”, “Home Setup” finished, code hierarchy look something like :","code":""},{"path":[]},{"path":"/articles/practical_example.html","id":"saving-annotations","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 8: Exporting Results","what":"Saving Annotations","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"save annotations analysis sharing: Go “Records” tab Click “Save Records” Choose CSV format Name file “remote_work_analysis.csv”","code":""},{"path":"/articles/practical_example.html","id":"exporting-annotated-text","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses > Step 8: Exporting Results","what":"Exporting Annotated Text","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"save annotated text coding highlights: “Code Memo” tab, click “Save Annotated Text” Select HTML format preserve color coding Name file “annotated_interview.html”","code":""},{"path":"/articles/practical_example.html","id":"step-9-project-comparison-two-coders","dir":"Articles","previous_headings":"Sample Project: Analyzing Interview Responses","what":"Step 9: Project Comparison (Two Coders)","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"’re working team two researchers code text, can use comparison tools: team member code interview independently Save person’s annotations CSV files Go “Comparison” tab Upload CSV files Run comparison see inter-coder agreement differences","code":""},{"path":"/articles/practical_example.html","id":"getting-the-sample-project","dir":"Articles","previous_headings":"","what":"Getting the Sample Project","title":"Practical Example - Qualitative Analysis with textAnnotatoR","text":"practice exact example, can download starter project textAnnotatoR GitHub repository: sample projects include interview text file used demonstration word file contains Martin Luther King Jr.’s “dream” speech. Note: Screenshots example outputs vignette illustration purposes. actual interface may vary slightly depending operating system, R version, package version.","code":"# If you have the remotes package installed remotes::install_github(\"chaoliu-cl/textAnnotatoR\", build_vignettes = TRUE)  # Or browse to: # https://github.com/chaoliu-cl/textAnnotatoR/inst/extdata/sample_projects"},{"path":"/articles/technical_integration.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"textAnnotatoR provides comprehensive GUI annotation, can integrated seamlessly broader R ecosystem. vignette demonstrates can integrate textAnnotatoR’s outputs popular R packages text analysis, visualization, reporting. IMPORTANT NOTE: example functions shown vignette part textAnnotatoR package. provided examples users can adapt implement workflows extend textAnnotatoR’s capabilities. sample functions demonstrate work textAnnotatoR’s data structures integrate R tools.","code":""},{"path":"/articles/technical_integration.html","id":"understanding-data-structures","dir":"Articles","previous_headings":"","what":"Understanding Data Structures","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"integrating tools, let’s explore structure textAnnotatoR’s data:","code":""},{"path":"/articles/technical_integration.html","id":"project-files","dir":"Articles","previous_headings":"Understanding Data Structures","what":"Project Files","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"textAnnotatoR project files (.rds) contain following components:","code":"# EXAMPLE USER FUNCTION - NOT PART OF THE PACKAGE # This function demonstrates how a user might initialize a directory # for working with textAnnotatoR project files programmatically initialize_project_directory <- function() {   # Get user documents directory as a safer default   user_docs <- file.path(path.expand(\"~\"), \"Documents\")      # Create textAnnotatoR directory if it doesn't exist   text_annotator_dir <- file.path(user_docs, \"textAnnotatoR\")   if (!dir.exists(text_annotator_dir)) {     dir.create(text_annotator_dir, recursive = TRUE)   }      # Create projects subdirectory   projects_dir <- file.path(text_annotator_dir, \"projects\")   if (!dir.exists(projects_dir)) {     dir.create(projects_dir, recursive = TRUE)   }      return(projects_dir) }  # Initialize the directory projects_dir <- initialize_project_directory()  # Create a sample project for demonstration project <- list(   text = \"Sample interview text content for demonstration purposes. This text contains information about remote work challenges and benefits.\",   annotations = data.frame(     start = c(1, 25, 50, 80),     end = c(10, 35, 60, 90),     text = c(\"Sample\", \"interview\", \"demonstration\", \"remote work\"),     code = c(\"Sample\", \"Interview\", \"Demo\", \"Remote\"),     memo = c(\"Example memo\", \"Interview note\", \"Demo note\", \"Remote note\"),     stringsAsFactors = FALSE   ),   codes = c(\"Sample\", \"Interview\", \"Demo\", \"Remote\"),   code_tree = data.tree::Node$new(\"Root\"),   code_colors = c(\"Sample\" = \"#FF0000\", \"Interview\" = \"#00FF00\",                    \"Demo\" = \"#0000FF\", \"Remote\" = \"#FFCC00\"),   memos = list(),   code_descriptions = list() )  # Structure of a project str(project, max.level = 1)"},{"path":"/articles/technical_integration.html","id":"annotation-data-frame","dir":"Articles","previous_headings":"Understanding Data Structures","what":"Annotation Data Frame","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"core annotation data stored standard R data frame: structure makes readily compatible standard R data manipulation tools.","code":"# View annotation structure head(project$annotations) #>   start end          text      code           memo #> 1     1  10        Sample    Sample   Example memo #> 2    25  35     interview Interview Interview note #> 3    50  60 demonstration      Demo      Demo note #> 4    80  90   remote work    Remote    Remote note"},{"path":[]},{"path":"/articles/technical_integration.html","id":"using-textannotator-with-quanteda","dir":"Articles","previous_headings":"Integrating with Text Analysis Packages","what":"Using textAnnotatoR with quanteda","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"quanteda package powerful framework text analysis. ’s can combine textAnnotatoR annotations quanteda:","code":"library(quanteda) library(quanteda.textstats) library(dplyr)  # Extract annotations by code sample_texts <- project$annotations %>%   filter(code == \"Sample\") %>%   pull(text)  # Create a corpus from these text segments sample_corpus <- corpus(sample_texts)  # Analyze with quanteda sample_dfm <- dfm(tokens(sample_corpus)) textstat_frequency(sample_dfm, n = 5)  # Top 5 words #>   feature frequency rank docfreq group #> 1  sample         1    1       1   all"},{"path":"/articles/technical_integration.html","id":"integration-with-tidytext","dir":"Articles","previous_headings":"Integrating with Text Analysis Packages","what":"Integration with tidytext","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"tidytext package works beautifully textAnnotatoR outputs:","code":"library(tidytext) library(ggplot2)  # Example of how you can convert annotations to tidy format tidy_annotations <- project$annotations %>%   unnest_tokens(word, text) %>%   anti_join(stop_words)  # Word frequency by code word_frequencies <- tidy_annotations %>%   count(code, word, sort = TRUE) %>%   group_by(code) %>%   top_n(5, n)  # Simple visualization ggplot(word_frequencies, aes(reorder(word, n), n, fill = code)) +   geom_col(show.legend = FALSE) +   facet_wrap(~code, scales = \"free\") +   coord_flip() +   labs(title = \"Top Words by Code\",        x = NULL,        y = \"Count\")"},{"path":[]},{"path":"/articles/technical_integration.html","id":"network-visualization-with-igraph","dir":"Articles","previous_headings":"Enhanced Visualization","what":"Network Visualization with igraph","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"following example demonstrates can create network visualizations co-occurrence patterns:","code":"library(igraph) library(ggplot2)  # EXAMPLE USER CODE - NOT PART OF THE PACKAGE # Create a simple matrix of code co-occurrences codes <- c(\"Home Setup\", \"Work-Life\", \"Tools\", \"Benefits\") co_matrix <- matrix(c(   0, 2, 1, 0,  # Home Setup   2, 0, 1, 3,  # Work-Life   1, 1, 0, 1,  # Tools   0, 3, 1, 0   # Benefits ), nrow = 4, byrow = TRUE)  rownames(co_matrix) <- colnames(co_matrix) <- codes  # Create a graph g <- graph_from_adjacency_matrix(   co_matrix,   mode = \"undirected\",   weighted = TRUE,   diag = FALSE )  # Basic plot plot(g,       vertex.color = \"lightblue\",      vertex.size = 30,      vertex.label.color = \"black\",      edge.width = E(g)$weight,      main = \"Code Co-occurrence Network\")"},{"path":"/articles/technical_integration.html","id":"simple-visualizations-with-ggplot2","dir":"Articles","previous_headings":"Enhanced Visualization","what":"Simple Visualizations with ggplot2","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"Create static visualizations code frequencies:","code":"# EXAMPLE USER CODE - NOT PART OF THE PACKAGE # Create a base ggplot with code frequencies code_freq <- data.frame(   code = codes,   frequency = c(5, 8, 3, 6) )  # Create a simple bar chart ggplot(code_freq, aes(reorder(code, frequency), frequency, fill = code)) +   geom_col() +   coord_flip() +   theme_minimal() +   labs(title = \"Example Code Frequencies\", x = \"Code\", y = \"Frequency\") +   theme(legend.position = \"none\")"},{"path":[]},{"path":"/articles/technical_integration.html","id":"processing-multiple-documents","dir":"Articles","previous_headings":"Batch Processing and Automation","what":"Processing Multiple Documents","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"projects multiple documents, can create functions automate workflow:","code":"# EXAMPLE USER FUNCTION - NOT PART OF THE PACKAGE # This function demonstrates how you might process a single document process_document <- function(file_path, coding_scheme) {   # Import text   text <- readLines(file_path, warn = FALSE)   text <- paste(text, collapse = \"\\n\")      # Create a new project structure   project <- list(     text = text,     annotations = data.frame(       start = integer(),       end = integer(),       text = character(),       code = character(),       memo = character(),       stringsAsFactors = FALSE     ),     codes = coding_scheme$codes,     code_tree = coding_scheme$code_tree,     code_colors = coding_scheme$code_colors,     memos = list(),     code_descriptions = coding_scheme$code_descriptions   )      # Save as a textAnnotatoR project   project_name <- paste0(basename(tools::file_path_sans_ext(file_path)), \".rds\")   saveRDS(project, file.path(projects_dir, project_name))      cat(\"Processed:\", file_path, \"\\n\")   return(project_name) }  # Example of how you might process a folder of documents # files <- list.files(\"interview_transcripts\", pattern = \"*.txt\", full.names = TRUE) # processed_projects <- sapply(files, process_document, coding_scheme = master_scheme)"},{"path":"/articles/technical_integration.html","id":"export-to-other-formats","dir":"Articles","previous_headings":"Batch Processing and Automation","what":"Export to Other Formats","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"can write functions convert textAnnotatoR annotations formats compatible QDA software:","code":"# EXAMPLE USER FUNCTION - NOT PART OF THE PACKAGE # Basic export to CSV export_to_csv <- function(project, output_file) {   write.csv(project$annotations, output_file, row.names = FALSE)   return(output_file) }  # Example of how you might export annotations # export_to_csv(project, \"project_annotations.csv\")"},{"path":[]},{"path":"/articles/technical_integration.html","id":"creating-reports-with-r-markdown","dir":"Articles","previous_headings":"Integration with Reporting Tools","what":"Creating Reports with R Markdown","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"can generate comprehensive reports textAnnotatoR analyses:","code":"library(rmarkdown)  # EXAMPLE USER FUNCTION - NOT PART OF THE PACKAGE # This function demonstrates how you might generate a simple report generate_analysis_report <- function(project, output_file = \"analysis_report.html\") {   # Create a temporary Rmd file   temp_rmd <- tempfile(fileext = \".Rmd\")      # Write R Markdown content   writeLines(     c(\"---\",       \"title: 'Qualitative Analysis Report'\",       \"output: html_document\",       \"---\",       \"\",       \"```{r setup, include=FALSE}\",       \"knitr::opts_chunk$set(echo = FALSE)\",       \"```\",       \"\",       \"# Analysis Overview\",       \"\",       \"This report presents findings from qualitative analysis using textAnnotatoR.\",       \"\",       \"## Document Statistics\",       \"\",       \"```{r}\",       \"stats <- data.frame(\",       \"  Metric = c('Total Words', 'Total Annotations', 'Unique Codes'),\",       paste0(\"  Value = c(length(strsplit(project$text, '\\\\\\\\W+')[[1]]), nrow(project$annotations), length(project$codes))\"),       \")\",       \"knitr::kable(stats)\",       \"```\",       \"\",       \"## Annotations Table\",       \"\",       \"```{r}\",       \"knitr::kable(project$annotations)\",       \"```\"     ),     temp_rmd   )      # Render the report   rmarkdown::render(temp_rmd, output_file = output_file)      return(output_file) }"},{"path":[]},{"path":"/articles/technical_integration.html","id":"working-with-large-documents","dir":"Articles","previous_headings":"Performance Tips","what":"Working with Large Documents","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"large documents, consider creating optimization strategies:","code":"# EXAMPLE USER FUNCTIONS - NOT PART OF THE PACKAGE # These functions demonstrate techniques you could implement  # Split large documents into manageable chunks split_large_document <- function(file_path, chunk_size = 5000) {   text <- readLines(file_path, warn = FALSE)   text <- paste(text, collapse = \"\\n\")      # Split into chunks   chunks <- list()   for (i in seq(1, nchar(text), by = chunk_size)) {     end_pos <- min(i + chunk_size - 1, nchar(text))     chunks[[length(chunks) + 1]] <- substr(text, i, end_pos)   }      # Save chunks   chunk_files <- character(length(chunks))   for (i in seq_along(chunks)) {     filename <- paste0(tools::file_path_sans_ext(basename(file_path)),                        \"_chunk\", i, \".txt\")     writeLines(chunks[[i]], filename)     chunk_files[i] <- filename   }      return(chunk_files) }  # Optimize annotations for performance optimize_annotations <- function(project) {   # Remove duplicate annotations   project$annotations <- unique(project$annotations)      # Sort by position   project$annotations <- project$annotations[order(project$annotations$start), ]      return(project) }"},{"path":"/articles/technical_integration.html","id":"batch-processing-tips","dir":"Articles","previous_headings":"Performance Tips","what":"Batch Processing Tips","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"working multiple files team members, implement functions like :","code":"# EXAMPLE USER FUNCTION - NOT PART OF THE PACKAGE # This function demonstrates how you might merge annotations from multiple coders merge_annotations <- function(annotation_files, output_file = \"merged_annotations.csv\") {   # Read all annotation files   all_annotations <- lapply(annotation_files, read.csv, stringsAsFactors = FALSE)      # Add coder column to each set   for (i in seq_along(all_annotations)) {     all_annotations[[i]]$coder <- paste0(\"Coder\", i)   }      # Combine all annotations   merged <- do.call(rbind, all_annotations)      # Write to CSV   write.csv(merged, output_file, row.names = FALSE)      return(output_file) }  # Example of how you might use this: # merge_annotations(c(\"coder1_annotations.csv\", \"coder2_annotations.csv\"))"},{"path":"/articles/technical_integration.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Technical Integration - Using textAnnotatoR with Other R Tools","text":"vignette demonstrates can leverage textAnnotatoR’s data structures integrate broader R ecosystem. combining intuitive annotation interface powerful R packages analysis visualization, gain control qualitative analysis workflow. Remember, example functions provided vignette part textAnnotatoR package rather examples can extend package’s functionality. encouraged adapt modify functions fit specific requirements. examples provided use simple data demonstrate concepts keeping package size reasonable. practice, use actual project data exported textAnnotatoR. Note: code examples use eval=FALSE prevent large outputs package building still showing code demonstration purposes.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chao Liu. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chao Liu (2025). textAnnotatoR: Interactive Text Annotation Tool 'shiny' GUI. R package version 0.1.4, https://github.com/chaoliu-cl/textAnnotatoR.","code":"@Manual{,   title = {textAnnotatoR: Interactive Text Annotation Tool with 'shiny' GUI},   author = {{Chao Liu}},   year = {2025},   note = {R package version 0.1.4},   url = {https://github.com/chaoliu-cl/textAnnotatoR}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Interactive Text Annotation Tool with shiny GUI","text":"textAnnotatoR provides interactive graphical user interface qualitative text analysis R. package allows researchers, students, practitioners annotate text, manage codes, create memos, visualize coding patterns intuitive Shiny interface.","code":""},{"path":"/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Interactive Text Annotation Tool with shiny GUI","text":"Interactive Text Annotation: Select code text segments directly within GUI Code Management: Create, organize, merge codes hierarchical structure Theme Organization: Group related codes themes tree-based hierarchy Memo Creation: Attach notes observations annotations Advanced Visualization: Analyze code frequencies, co-occurrences, patterns Comparison Tools: Compare coding patterns different coders documents Project Management: Save, load, manage annotation projects Export Options: Save annotations coded text various formats (CSV, JSON, HTML) R Integration: Seamlessly combine R packages advanced analysis","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive Text Annotation Tool with shiny GUI","text":"","code":"# Install from CRAN install.packages(\"textAnnotatoR\")  # Or install the development version from GitHub # install.packages(\"devtools\") devtools::install_github(\"chaoliu-cl/textAnnotatoR\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Interactive Text Annotation Tool with shiny GUI","text":"Launch annotation interface simple function call: opens Shiny application default web browser. interface includes toolbar project management, tabbed main area different functions, text display area.","code":"library(textAnnotatoR) annotate_gui()"},{"path":"/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Interactive Text Annotation Tool with shiny GUI","text":"Create New Project: Click “New Project” top toolbar Import Text: Go “File” tab, upload text document (.txt, .docx, .pdf) Annotate Text: Select text segments apply codes Organize Codes: Create hierarchical structure themes codes Analyze Patterns: Use analysis tools explore coding Export Results: Save annotations analysis use","code":""},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Interactive Text Annotation Tool with shiny GUI","text":"Comprehensive documentation available vignettes:","code":"# List available vignettes vignette(package = \"textAnnotatoR\")  # Read specific vignettes vignette(\"practical_example\", package = \"textAnnotatoR\") vignette(\"technical_integration\", package = \"textAnnotatoR\")"},{"path":[]},{"path":"/index.html","id":"code-hierarchies","dir":"","previous_headings":"Advanced Features","what":"Code Hierarchies","title":"Interactive Text Annotation Tool with shiny GUI","text":"Create manage hierarchical code structures themes subthemes: Use “Add Theme” create organizational categories Group related codes appropriate themes Visualize hierarchy tree structure","code":""},{"path":"/index.html","id":"co-occurrence-analysis","dir":"","previous_headings":"Advanced Features","what":"Co-occurrence Analysis","title":"Interactive Text Annotation Tool with shiny GUI","text":"Explore relationships different codes: Identify patterns code co-occurrence Visualize connections network graphs Examine statistical measures code relationships","code":""},{"path":"/index.html","id":"comparison-tools","dir":"","previous_headings":"Advanced Features","what":"Comparison Tools","title":"Interactive Text Annotation Tool with shiny GUI","text":"Compare coding patterns different coders documents: Upload two annotation sets Analyze similarities differences Visualize comparative patterns","code":""},{"path":"/index.html","id":"data-export","dir":"","previous_headings":"Advanced Features","what":"Data Export","title":"Interactive Text Annotation Tool with shiny GUI","text":"Export annotations various formats: CSV quantitative analysis JSON web applications HTML formatted viewing code highlighting","code":""},{"path":"/index.html","id":"integration-with-r-ecosystem","dir":"","previous_headings":"","what":"Integration with R Ecosystem","title":"Interactive Text Annotation Tool with shiny GUI","text":"textAnnotatoR designed work seamlessly R packages: tidytext: text mining natural language processing quanteda: advanced text analysis igraph/ggraph: network visualizations code relationships rmarkdown/shiny: reporting interactive dashboards","code":""},{"path":"/index.html","id":"system-requirements","dir":"","previous_headings":"","what":"System Requirements","title":"Interactive Text Annotation Tool with shiny GUI","text":"R version 4.0.0 higher Shiny dependencies modern web browser","code":""},{"path":"/index.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Interactive Text Annotation Tool with shiny GUI","text":"package includes comprehensive automated tests core functionality, data processing, utility functions. testing interactive Shiny components presents unique challenges, package maintains good test coverage underlying logic data manipulation functions power user interface. Interactive components validated manual testing user feedback.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Interactive Text Annotation Tool with shiny GUI","text":"Contributions textAnnotatoR welcome! Please feel free submit issues pull requests GitHub.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Interactive Text Annotation Tool with shiny GUI","text":"package licensed GPL-3 License.","code":""},{"path":"/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Interactive Text Annotation Tool with shiny GUI","text":"Issues: Please report issues GitHub issues page Email: chaoliu@cedarville.edu X: @X","code":""},{"path":"/reference/addJS.html","id":null,"dir":"Reference","previous_headings":"","what":"JavaScript code for handling text selection and UI interactions — addJS","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"internal JavaScript code provides functionality text selection, popup menus, interactive UI elements text annotation interface. manages mouse events text selection, highlighting, code application.","code":""},{"path":"/reference/addJS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"character string containing JavaScript code","code":""},{"path":"/reference/addJS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"JavaScript code implements following functionality: Creation management popup menus code operations Text selection handling mouse events Highlighting selected text Communication Shiny server custom message handlers Event handling code replacement, renaming, deletion","code":""},{"path":"/reference/addJS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"internal function used textAnnotatoR package called directly users.","code":""},{"path":"/reference/addJS.html","id":"event-handlers","dir":"Reference","previous_headings":"","what":"Event Handlers","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"Text selection events (mousedown, mousemove, mouseup) Popup menu events code operations Custom Shiny message handlers selection state","code":""},{"path":"/reference/add_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Add action to history — add_action","title":"Add action to history — add_action","text":"Add action history","code":""},{"path":"/reference/add_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add action to history — add_action","text":"","code":"add_action(rv, action)"},{"path":"/reference/add_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add action to history — add_action","text":"rv Reactive values object action Action add","code":""},{"path":"/reference/add_code_to_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add code to theme in hierarchy — add_code_to_theme","title":"Add code to theme in hierarchy — add_code_to_theme","text":"Adds new code specific theme code hierarchy. code can added root level nested within existing themes.","code":""},{"path":"/reference/add_code_to_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add code to theme in hierarchy — add_code_to_theme","text":"","code":"add_code_to_theme(node, code_name, theme_path, description = \"\")"},{"path":"/reference/add_code_to_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add code to theme in hierarchy — add_code_to_theme","text":"node Root node hierarchy tree code_name Character string specifying name code add theme_path Character vector specifying path target theme description Optional character string providing description code","code":""},{"path":"/reference/add_code_to_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add code to theme in hierarchy — add_code_to_theme","text":"Updated node new code added","code":""},{"path":"/reference/add_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add theme to code hierarchy — add_theme","title":"Add theme to code hierarchy — add_theme","text":"Adds new theme code hierarchy tree. Themes can used organize group related codes hierarchical structure.","code":""},{"path":"/reference/add_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add theme to code hierarchy — add_theme","text":"","code":"add_theme(node, theme_name, description = \"\")"},{"path":"/reference/add_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add theme to code hierarchy — add_theme","text":"node Root node hierarchy tree theme_name Character string specifying name new theme description Optional character string providing description theme","code":""},{"path":"/reference/add_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add theme to code hierarchy — add_theme","text":"Updated node new theme added","code":""},{"path":"/reference/analyze_co_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze code co-occurrence patterns — analyze_co_occurrences","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"Analyzes different codes co-occur within annotated text examining overlapping annotations calculating various metrics co-occurrence strength.","code":""},{"path":"/reference/analyze_co_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"","code":"analyze_co_occurrences(annotations)"},{"path":"/reference/analyze_co_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"annotations data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/analyze_co_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"list containing co-occurrence analysis results: combinations: list containing frequency table code co-occurrences characteristics: list average overlap length total overlap count","code":""},{"path":"/reference/analyze_code_combinations.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze combinations of code pairs — analyze_code_combinations","title":"Analyze combinations of code pairs — analyze_code_combinations","text":"Analyzes frequency different code combinations counting often different pairs codes appear together overlapping annotations.","code":""},{"path":"/reference/analyze_code_combinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze combinations of code pairs — analyze_code_combinations","text":"","code":"analyze_code_combinations(overlaps)"},{"path":"/reference/analyze_code_combinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze combinations of code pairs — analyze_code_combinations","text":"overlaps List overlap information, element contains: code1: character, identifier first code code2: character, identifier second code","code":""},{"path":"/reference/analyze_code_combinations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze combinations of code pairs — analyze_code_combinations","text":"List containing: frequencies: Table object containing counts code pair combination, row names formatted \"code1-code2\" codes sorted alphabetically","code":""},{"path":"/reference/analyze_code_combinations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze combinations of code pairs — analyze_code_combinations","text":"function processes overlapping code pairs creates frequency table combinations. Code pairs sorted alphabetically counting ensure consistent ordering (e.g., \"-B\" \"B-\" counted combination). Returns empty list overlaps provided.","code":""},{"path":"/reference/analyze_code_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze context around code applications — analyze_code_context","title":"Analyze context around code applications — analyze_code_context","text":"Examines surrounding context codes applied looking preceding following annotations understand code relationships.","code":""},{"path":"/reference/analyze_code_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze context around code applications — analyze_code_context","text":"","code":"analyze_code_context(code_anns, all_anns)"},{"path":"/reference/analyze_code_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze context around code applications — analyze_code_context","text":"code_anns Data frame containing annotations specific code: start: numeric, starting position end: numeric, ending position code: character, code identifier all_anns Data frame containing annotations text","code":""},{"path":"/reference/analyze_code_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze context around code applications — analyze_code_context","text":"List contexts code instance: : Preceding annotation exists : Following annotation exists","code":""},{"path":"/reference/analyze_code_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze coding density across text — analyze_code_distribution","title":"Analyze coding density across text — analyze_code_distribution","text":"Analyzes density code applications across text calculating overall density metrics identifying regions dense coding activity.","code":""},{"path":"/reference/analyze_code_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze coding density across text — analyze_code_distribution","text":"","code":"analyze_code_distribution(annotations)"},{"path":"/reference/analyze_code_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze coding density across text — analyze_code_distribution","text":"annotations Data frame containing annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation","code":""},{"path":"/reference/analyze_code_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze coding density across text — analyze_code_distribution","text":"List containing: overall_density: Numeric value representing proportion text covered codes dense_regions: List vector pairs indicating start end positions dense regions","code":""},{"path":"/reference/analyze_code_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze code application patterns — analyze_code_patterns","title":"Analyze code application patterns — analyze_code_patterns","text":"Analyzes patterns codes applied annotations.","code":""},{"path":"/reference/analyze_code_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze code application patterns — analyze_code_patterns","text":"","code":"analyze_code_patterns(annotations)"},{"path":"/reference/analyze_code_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze code application patterns — analyze_code_patterns","text":"annotations Data frame containing code annotations columns: start: numeric, starting position end: numeric, ending position code: character, code identifier","code":""},{"path":"/reference/analyze_code_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze code application patterns — analyze_code_patterns","text":"List containing: patterns: List code patterns summary: Summary statistics","code":""},{"path":"/reference/analyze_coding_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze coding density in text — analyze_coding_density","title":"Analyze coding density in text — analyze_coding_density","text":"Calculates metrics related coding density text, including overall density identification densely coded regions.","code":""},{"path":"/reference/analyze_coding_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze coding density in text — analyze_coding_density","text":"","code":"analyze_coding_density(annotations)"},{"path":"/reference/analyze_coding_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze coding density in text — analyze_coding_density","text":"annotations Data frame containing annotations columns: start: numeric, starting position end: numeric, ending position code: character, code identifier","code":""},{"path":"/reference/analyze_coding_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze coding density in text — analyze_coding_density","text":"List containing: overall_density: Numeric value representing proportion text covered codes dense_regions: List vectors, containing start end positions identified dense coding regions","code":""},{"path":"/reference/analyze_coding_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze coding density in text — analyze_coding_density","text":"Density calculated ratio coded text total text length. Dense regions identified consecutive annotations close together (within 20 characters default).","code":""},{"path":"/reference/analyze_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze coverage patterns in annotations — analyze_coverage","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"Analyzes codes distributed throughout text, including clustering patterns coding density.","code":""},{"path":"/reference/analyze_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"","code":"analyze_coverage(annotations)"},{"path":"/reference/analyze_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"annotations Data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/analyze_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"List containing: clusters: List annotation clusters density: List containing overall density metrics distribution: List containing code frequencies positions","code":""},{"path":"/reference/analyze_memo_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze memo usage patterns — analyze_memo_patterns","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"Examines memos used codes analyzing memo frequency, content, patterns memo application across code instances.","code":""},{"path":"/reference/analyze_memo_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"","code":"analyze_memo_patterns(code_anns)"},{"path":"/reference/analyze_memo_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"code_anns Data frame containing code annotations columns: memo: character, memo text associated annotation code: character, code identifier","code":""},{"path":"/reference/analyze_memo_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"List containing: memo_frequency: Proportion annotations memos has_memos: Logical vector indicating memo presence","code":""},{"path":"/reference/analyze_overlap_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze characteristics of code overlaps — analyze_overlap_characteristics","title":"Analyze characteristics of code overlaps — analyze_overlap_characteristics","text":"Analyzes characteristics overlapping code applications calculating various metrics overlap patterns.","code":""},{"path":"/reference/analyze_overlap_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze characteristics of code overlaps — analyze_overlap_characteristics","text":"","code":"analyze_overlap_characteristics(overlaps)"},{"path":"/reference/analyze_overlap_characteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze characteristics of code overlaps — analyze_overlap_characteristics","text":"overlaps List overlap information, element contains: overlap_start: numeric, starting position overlap overlap_end: numeric, ending position overlap","code":""},{"path":"/reference/analyze_overlap_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze characteristics of code overlaps — analyze_overlap_characteristics","text":"List containing: avg_length: Numeric value average overlap length total_overlaps: Integer count total overlapping instances","code":""},{"path":"/reference/analyze_overlap_characteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze characteristics of code overlaps — analyze_overlap_characteristics","text":"Calculates metrics code overlaps including average length overlapping regions total number overlaps. Returns empty list empty input.","code":""},{"path":"/reference/analyze_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze sequences and transitions between codes — analyze_sequences","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"Analyzes codes sequenced text examining transitions consecutive codes identifying repeated patterns.","code":""},{"path":"/reference/analyze_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"","code":"analyze_sequences(annotations)"},{"path":"/reference/analyze_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"annotations Data frame text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/analyze_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"List containing: transitions: List transitions consecutive codes patterns: List identified repeated code sequences","code":""},{"path":"/reference/annotate_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Annotation GUI — annotate_gui","title":"Text Annotation GUI — annotate_gui","text":"Launch interactive Shiny application text annotation analysis. GUI provides tools importing text, applying codes, creating memos, analyzing annotations various visualizations.","code":""},{"path":"/reference/annotate_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text Annotation GUI — annotate_gui","text":"","code":"annotate_gui()"},{"path":"/reference/annotate_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text Annotation GUI — annotate_gui","text":"Launches Shiny application default web browser","code":""},{"path":"/reference/annotate_gui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Text Annotation GUI — annotate_gui","text":"Interactive Text Annotation Interface annotation interface includes following features: Text import display Code application management Memo creation linking Project management (save/load) Annotation analysis tools Export capabilities","code":""},{"path":"/reference/annotate_gui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Text Annotation GUI — annotate_gui","text":"package provides functionality users interactively save files Shiny interface. file operations explicitly initiated users file dialogs, files written automatically user's system without direct action consent.","code":""},{"path":"/reference/annotate_gui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text Annotation GUI — annotate_gui","text":"","code":"if(interactive()) {   annotate_gui() }"},{"path":"/reference/apply_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply or reverse an action (Updated version) — apply_action","title":"Apply or reverse an action (Updated version) — apply_action","text":"Applies reverses action undo/redo system. Handles different types actions including adding/removing annotations merging/unmerging codes.","code":""},{"path":"/reference/apply_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply or reverse an action (Updated version) — apply_action","text":"","code":"apply_action(rv, action, reverse = FALSE)"},{"path":"/reference/apply_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply or reverse an action (Updated version) — apply_action","text":"rv ReactiveValues object containing application state action List containing action information reverse Logical indicating whether reverse action","code":""},{"path":"/reference/apply_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply or reverse an action (Updated version) — apply_action","text":"Invisible rv (ReactiveValues object)","code":""},{"path":"/reference/calculate_co_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate code co-occurrences in annotations — calculate_co_occurrences","title":"Calculate code co-occurrences in annotations — calculate_co_occurrences","text":"Analyzes text annotations identify count instances different codes overlap co-occur text regions. Handles edge cases provides error-safe operation.","code":""},{"path":"/reference/calculate_co_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate code co-occurrences in annotations — calculate_co_occurrences","text":"","code":"calculate_co_occurrences(annotations)"},{"path":"/reference/calculate_co_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate code co-occurrences in annotations — calculate_co_occurrences","text":"annotations Data frame containing annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code identifier","code":""},{"path":"/reference/calculate_co_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate code co-occurrences in annotations — calculate_co_occurrences","text":"Table object containing frequencies code pairs co-occur, code pair names \"code1 & code2\"","code":""},{"path":"/reference/calculate_co_occurrences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate code co-occurrences in annotations — calculate_co_occurrences","text":"Co-occurrences identified finding overlapping text regions different code annotations. function sorts annotations position checks overlaps pair annotations.","code":""},{"path":"/reference/calculate_hierarchy_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hierarchy statistics — calculate_hierarchy_stats","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"Calculates various statistics code hierarchy including total number themes codes, maximum depth, distribution codes across themes. Now also accounts codes associated theme.","code":""},{"path":"/reference/calculate_hierarchy_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"","code":"calculate_hierarchy_stats(node, all_codes = NULL)"},{"path":"/reference/calculate_hierarchy_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"node Root node hierarchy tree all_codes Character vector codes application","code":""},{"path":"/reference/calculate_hierarchy_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"list containing hierarchy statistics: total_themes: Total number themes hierarchy (excluding root) total_codes: Total number codes hierarchy unassigned_codes: Number codes hierarchy max_depth: Maximum depth hierarchy tree codes_per_theme: List showing number codes theme average_codes_per_theme: Average number codes per theme","code":""},{"path":"/reference/calculate_transitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate transitions between consecutive codes — calculate_transitions","title":"Calculate transitions between consecutive codes — calculate_transitions","text":"Analyzes sequence code applications identify transitions consecutive codes text. Creates list code pairs representing transition one code another.","code":""},{"path":"/reference/calculate_transitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate transitions between consecutive codes — calculate_transitions","text":"","code":"calculate_transitions(annotations)"},{"path":"/reference/calculate_transitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate transitions between consecutive codes — calculate_transitions","text":"annotations Data frame containing annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code identifier","code":""},{"path":"/reference/calculate_transitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate transitions between consecutive codes — calculate_transitions","text":"List element named vector containing: : Character string source code : Character string target code","code":""},{"path":"/reference/calculate_transitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate transitions between consecutive codes — calculate_transitions","text":"Transitions identified sorting annotations position analyzing consecutive pairs codes. function handles edge cases provides error-safe operation.","code":""},{"path":"/reference/clean_export_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean directory paths for export — clean_export_path","title":"Clean directory paths for export — clean_export_path","text":"Sanitizes directory paths file export operations. function ensures export paths valid, accessible, secure files written. handles path normalization security checks export operations.","code":""},{"path":"/reference/clean_export_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean directory paths for export — clean_export_path","text":"","code":"clean_export_path(dir_path, create = FALSE)"},{"path":"/reference/clean_export_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean directory paths for export — clean_export_path","text":"dir_path Character string containing directory path clean create Logical indicating whether create directory exist","code":""},{"path":"/reference/clean_export_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean directory paths for export — clean_export_path","text":"Cleaned validated directory path","code":""},{"path":"/reference/clean_project_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean project path — clean_project_path","title":"Clean project path — clean_project_path","text":"Ensures project paths valid secure removing potentially harmful characters preventing directory traversal attempts. function sanitizes file paths prevent security issues ensure consistent file naming across different operating systems.","code":""},{"path":"/reference/clean_project_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean project path — clean_project_path","text":"","code":"clean_project_path(path)"},{"path":"/reference/clean_project_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean project path — clean_project_path","text":"path Character string containing project path cleaned","code":""},{"path":"/reference/clean_project_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean project path — clean_project_path","text":"Sanitized path string safe use file operations","code":""},{"path":"/reference/code_exists_in_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if code exists in hierarchy — code_exists_in_hierarchy","title":"Check if code exists in hierarchy — code_exists_in_hierarchy","text":"Helper function check code already exists anywhere code hierarchy","code":""},{"path":"/reference/code_exists_in_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if code exists in hierarchy — code_exists_in_hierarchy","text":"","code":"code_exists_in_hierarchy(node, code_name)"},{"path":"/reference/code_exists_in_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if code exists in hierarchy — code_exists_in_hierarchy","text":"node Root node hierarchy tree code_name Character string code name search ","code":""},{"path":"/reference/code_exists_in_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if code exists in hierarchy — code_exists_in_hierarchy","text":"Logical indicating whether code exists hierarchy","code":""},{"path":"/reference/compare_co_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code co-occurrence patterns between coders — compare_co_occurrences","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"Analyzes different coders overlap code applications comparing frequency patterns code co-occurrences.","code":""},{"path":"/reference/compare_co_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"","code":"compare_co_occurrences(overlaps_list)"},{"path":"/reference/compare_co_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"overlaps_list List overlap patterns different coders, entry contains: combinations: List containing frequency table code co-occurrences","code":""},{"path":"/reference/compare_co_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"List containing: overlap_variation: Numeric value indicating range overlap counts summary: Character string describing variation overlapping pairs","code":""},{"path":"/reference/compare_code_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code application patterns between coders — compare_code_patterns","title":"Compare code application patterns between coders — compare_code_patterns","text":"Analyzes compares different coders apply codes examining code segment lengths memo usage patterns across coding strategies.","code":""},{"path":"/reference/compare_code_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code application patterns between coders — compare_code_patterns","text":"","code":"compare_code_patterns(patterns_list)"},{"path":"/reference/compare_code_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code application patterns between coders — compare_code_patterns","text":"patterns_list List coding patterns different coders, pattern contains: typical_length: numeric, average length code segments memo_patterns: list containing memo usage statistics","code":""},{"path":"/reference/compare_code_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code application patterns between coders — compare_code_patterns","text":"List containing: length_variation: Character string describing variation code segment lengths memo_usage_summary: Character string describing differences memo usage","code":""},{"path":"/reference/compare_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code usage between coders — compare_codes","title":"Compare code usage between coders — compare_codes","text":"Compares different coders use codes analyzing shared codes usage patterns across coding strategies.","code":""},{"path":"/reference/compare_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code usage between coders — compare_codes","text":"","code":"compare_codes(coding_strategies)"},{"path":"/reference/compare_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code usage between coders — compare_codes","text":"coding_strategies List coding strategies, strategy contains code frequency information","code":""},{"path":"/reference/compare_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code usage between coders — compare_codes","text":"List containing: shared_codes: Character vector codes used across strategies usage_matrix: Matrix showing code usage across strategies","code":""},{"path":"/reference/compare_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coverage patterns between coding strategies — compare_coverage","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"Analyzes compares coverage patterns different coding strategies, including total codes used unique code counts.","code":""},{"path":"/reference/compare_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"","code":"compare_coverage(coding_strategies)"},{"path":"/reference/compare_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"coding_strategies List coding strategies, strategy contains: coverage: List containing distribution information frequencies: Table code frequencies","code":""},{"path":"/reference/compare_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"List containing: total_codes_range: Numeric vector min max total codes unique_codes_range: Numeric vector min max unique codes","code":""},{"path":"/reference/compare_overlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare overlap patterns between coders — compare_overlaps","title":"Compare overlap patterns between coders — compare_overlaps","text":"Analyzes different coders overlap code applications comparing overlap patterns frequencies across coding strategies.","code":""},{"path":"/reference/compare_overlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare overlap patterns between coders — compare_overlaps","text":"","code":"compare_overlaps(coding_strategies)"},{"path":"/reference/compare_overlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare overlap patterns between coders — compare_overlaps","text":"coding_strategies List coding strategies, strategy contains overlap information","code":""},{"path":"/reference/compare_overlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare overlap patterns between coders — compare_overlaps","text":"List containing: total_overlaps_range: Range total overlaps across strategies unique_pairs_range: Range unique code pairs across strategies","code":""},{"path":"/reference/compare_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coding patterns between different coders — compare_patterns","title":"Compare coding patterns between different coders — compare_patterns","text":"Analyzes compares coding patterns different coders examining various aspects including coverage, code application patterns, combinations, sequences.","code":""},{"path":"/reference/compare_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coding patterns between different coders — compare_patterns","text":"","code":"compare_patterns(coding_strategies)"},{"path":"/reference/compare_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coding patterns between different coders — compare_patterns","text":"coding_strategies List coding strategies, strategy contains: coverage: List containing density distribution information code_patterns: List code application patterns combinations: List code combination patterns sequences: List code sequence patterns","code":""},{"path":"/reference/compare_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coding patterns between different coders — compare_patterns","text":"List containing comparison results: coverage_differences: Analysis coding density variations code_differences: Analysis code application differences combination_differences: Analysis code combination patterns sequence_differences: Analysis code sequence patterns","code":""},{"path":"/reference/compare_patterns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare coding patterns between different coders — compare_patterns","text":"function performs multiple comparisons error handling aspect coding patterns. Returns descriptive messages analysis performed due insufficient data.","code":""},{"path":"/reference/compare_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code sequence patterns between coders — compare_sequences","title":"Compare code sequence patterns between coders — compare_sequences","text":"Analyzes different coders sequence codes comparing patterns frequency code transitions.","code":""},{"path":"/reference/compare_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code sequence patterns between coders — compare_sequences","text":"","code":"compare_sequences(sequences_list)"},{"path":"/reference/compare_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code sequence patterns between coders — compare_sequences","text":"sequences_list List sequence patterns different coders, entry contains: transitions: List code transitions observed text","code":""},{"path":"/reference/compare_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code sequence patterns between coders — compare_sequences","text":"List containing: sequence_variation: Numeric value indicating range transition counts summary: Character string describing variation code transitions","code":""},{"path":"/reference/concatenate_memos.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate memo texts — concatenate_memos","title":"Concatenate memo texts — concatenate_memos","text":"Combines existing new memo texts proper separators, handling empty memos appropriately. Combines existing new memo texts proper separators, handling empty memos appropriately.","code":""},{"path":"/reference/concatenate_memos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate memo texts — concatenate_memos","text":"","code":"concatenate_memos(existing_memo, new_memo)  concatenate_memos(existing_memo, new_memo)"},{"path":"/reference/concatenate_memos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate memo texts — concatenate_memos","text":"existing_memo Character string containing current memo text new_memo Character string containing memo text append","code":""},{"path":"/reference/concatenate_memos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate memo texts — concatenate_memos","text":"Character string combined memo text Character string combined memo text","code":""},{"path":"/reference/create_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and manage undo/redo action — create_action","title":"Create and manage undo/redo action — create_action","text":"Creates action object undo/redo system, containing information type action, data involved, reverse action. Creates action object undo/redo system, containing information type action, data involved, reverse action.","code":""},{"path":"/reference/create_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and manage undo/redo action — create_action","text":"","code":"create_action(type, data, reverse_data = NULL)  create_action(type, data, reverse_data = NULL)"},{"path":"/reference/create_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and manage undo/redo action — create_action","text":"type Character string specifying type action data List containing action data reverse_data Optional list containing data reversing action","code":""},{"path":"/reference/create_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and manage undo/redo action — create_action","text":"List containing: type: Action type identifier data: Action data reverse_data: Data reversing action timestamp: Time action created List containing: type: Action type identifier data: Action data reverse_data: Data reversing action timestamp: Time action created","code":""},{"path":"/reference/create_backup_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create backup directory — create_backup_dir","title":"Create backup directory — create_backup_dir","text":"Creates manages backup directory project files. function ensures automatic backups designated storage location properly managed cleaned needed.","code":""},{"path":"/reference/create_backup_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create backup directory — create_backup_dir","text":"","code":"create_backup_dir(max_backups = 3)"},{"path":"/reference/create_backup_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create backup directory — create_backup_dir","text":"max_backups Integer specifying maximum number backups keep","code":""},{"path":"/reference/create_backup_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create backup directory — create_backup_dir","text":"Character string containing path backup directory","code":""},{"path":"/reference/create_new_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize new project — create_new_project","title":"Initialize new project — create_new_project","text":"Creates new project resetting reactive values defaults clearing UI elements.","code":""},{"path":"/reference/create_new_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize new project — create_new_project","text":"","code":"create_new_project(rv, session)"},{"path":"/reference/create_new_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize new project — create_new_project","text":"rv ReactiveValues object reset containing: text: Text content annotations: Annotation data frame codes: Vector codes code_tree: Hierarchy Node object project state values session Shiny session object","code":""},{"path":"/reference/create_new_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize new project — create_new_project","text":"Invisible NULL, called side effect","code":""},{"path":"/reference/create_plain_text_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plain text version of annotations — create_plain_text_annotations","title":"Create plain text version of annotations — create_plain_text_annotations","text":"Converts annotated text plain text format code markers. annotation represented code identifier annotated text wrapped square brackets. Multiple annotations preserved shown order appearance text.","code":""},{"path":"/reference/create_plain_text_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plain text version of annotations — create_plain_text_annotations","text":"","code":"create_plain_text_annotations(text, annotations)"},{"path":"/reference/create_plain_text_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plain text version of annotations — create_plain_text_annotations","text":"text Character string containing original text annotations Data frame annotations columns: start: Numeric vector starting positions end: Numeric vector ending positions code: Character vector code names","code":""},{"path":"/reference/create_plain_text_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plain text version of annotations — create_plain_text_annotations","text":"Character string containing formatted text code markers","code":""},{"path":"/reference/export_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Export code hierarchy to JSON format — export_hierarchy","title":"Export code hierarchy to JSON format — export_hierarchy","text":"Converts code hierarchy tree structure JSON string representation can saved transmitted preserving node properties relationships.","code":""},{"path":"/reference/export_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export code hierarchy to JSON format — export_hierarchy","text":"","code":"export_hierarchy(node)"},{"path":"/reference/export_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export code hierarchy to JSON format — export_hierarchy","text":"node Root node hierarchy tree","code":""},{"path":"/reference/export_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export code hierarchy to JSON format — export_hierarchy","text":"JSON string representation hierarchy","code":""},{"path":"/reference/find_annotation_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Find clusters of annotations in text — find_annotation_clusters","title":"Find clusters of annotations in text — find_annotation_clusters","text":"Identifies clusters annotations close together text, helping identify dense coding regions.","code":""},{"path":"/reference/find_annotation_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find clusters of annotations in text — find_annotation_clusters","text":"","code":"find_annotation_clusters(annotations)"},{"path":"/reference/find_annotation_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find clusters of annotations in text — find_annotation_clusters","text":"annotations Data frame containing sorted text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/find_annotation_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find clusters of annotations in text — find_annotation_clusters","text":"List annotation clusters, cluster contains annotations within specified distance ","code":""},{"path":"/reference/find_code_transitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find transitions between codes — find_code_transitions","title":"Find transitions between codes — find_code_transitions","text":"Identifies analyzes transitions consecutive code applications understand coding sequence patterns.","code":""},{"path":"/reference/find_code_transitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find transitions between codes — find_code_transitions","text":"","code":"find_code_transitions(annotations)"},{"path":"/reference/find_code_transitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find transitions between codes — find_code_transitions","text":"annotations Data frame sorted annotations columns: start: numeric, starting position end: numeric, ending position code: character, code identifier","code":""},{"path":"/reference/find_code_transitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find transitions between codes — find_code_transitions","text":"List code transitions, containing: : Source code : Target code","code":""},{"path":"/reference/find_node_by_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Find node by name in a tree structure — find_node_by_name","title":"Find node by name in a tree structure — find_node_by_name","text":"Recursively searches tree structure find node specific name. search performed depth-first returns first matching node found.","code":""},{"path":"/reference/find_node_by_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find node by name in a tree structure — find_node_by_name","text":"","code":"find_node_by_name(node, target_name)"},{"path":"/reference/find_node_by_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find node by name in a tree structure — find_node_by_name","text":"node Node object representing current position tree. : name: Character string identifier children: List child nodes target_name Character string specifying name search ","code":""},{"path":"/reference/find_node_by_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find node by name in a tree structure — find_node_by_name","text":"Node object found, NULL otherwise","code":""},{"path":"/reference/find_node_by_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find node by name in a tree structure — find_node_by_name","text":"function handles NULL inputs safely performs recursive depth-first search tree structure. checks node names recursively searches child nodes.","code":""},{"path":"/reference/find_overlapping_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find overlapping code annotations — find_overlapping_codes","title":"Find overlapping code annotations — find_overlapping_codes","text":"Identifies pairs annotations overlap text returns intersection points associated codes.","code":""},{"path":"/reference/find_overlapping_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find overlapping code annotations — find_overlapping_codes","text":"","code":"find_overlapping_codes(annotations)"},{"path":"/reference/find_overlapping_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find overlapping code annotations — find_overlapping_codes","text":"annotations data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/find_overlapping_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find overlapping code annotations — find_overlapping_codes","text":"list overlapping code pairs, containing: code1: first code overlap code2: second code overlap overlap_start: starting position overlap overlap_end: ending position overlap","code":""},{"path":"/reference/find_repeated_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Find repeated patterns in code sequences — find_repeated_sequences","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"Identifies repeating patterns 2-3 codes sequence uncover recurring coding structures.","code":""},{"path":"/reference/find_repeated_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"","code":"find_repeated_sequences(annotations)"},{"path":"/reference/find_repeated_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"annotations Data frame sorted annotations columns: code: character, code identifier","code":""},{"path":"/reference/find_repeated_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"Named list pattern frequencies : names: Code patterns (e.g. \"code1-code2\") values: Number occurrences","code":""},{"path":"/reference/format_code_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format code difference analysis results — format_code_differences","title":"Format code difference analysis results — format_code_differences","text":"Formats results code difference analysis human-readable string, handling character list inputs appropriately.","code":""},{"path":"/reference/format_code_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format code difference analysis results — format_code_differences","text":"","code":"format_code_differences(differences)"},{"path":"/reference/format_code_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format code difference analysis results — format_code_differences","text":"differences Either character string containing direct analysis results list containing: pattern_summary: Character string summarizing code pattern differences","code":""},{"path":"/reference/format_code_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format code difference analysis results — format_code_differences","text":"Character string containing formatted code analysis results","code":""},{"path":"/reference/format_coverage_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format coverage difference analysis results — format_coverage_differences","title":"Format coverage difference analysis results — format_coverage_differences","text":"Formats results coverage difference analysis human-readable string, handling character list inputs appropriately.","code":""},{"path":"/reference/format_coverage_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format coverage difference analysis results — format_coverage_differences","text":"","code":"format_coverage_differences(differences)"},{"path":"/reference/format_coverage_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format coverage difference analysis results — format_coverage_differences","text":"differences Either character string containing direct analysis results list containing: density_summary: Character string summarizing density differences","code":""},{"path":"/reference/format_coverage_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format coverage difference analysis results — format_coverage_differences","text":"Character string containing formatted coverage analysis results","code":""},{"path":"/reference/format_overlap_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format overlap difference analysis results — format_overlap_differences","title":"Format overlap difference analysis results — format_overlap_differences","text":"Formats results overlap difference analysis human-readable string, processing character complex input types.","code":""},{"path":"/reference/format_overlap_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format overlap difference analysis results — format_overlap_differences","text":"","code":"format_overlap_differences(differences)"},{"path":"/reference/format_overlap_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format overlap difference analysis results — format_overlap_differences","text":"differences Either character string containing direct analysis results complex analysis object","code":""},{"path":"/reference/format_overlap_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format overlap difference analysis results — format_overlap_differences","text":"Character string containing formatted overlap analysis results","code":""},{"path":"/reference/format_sequence_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format sequence difference analysis results — format_sequence_differences","title":"Format sequence difference analysis results — format_sequence_differences","text":"Formats results sequence difference analysis human-readable string, processing character complex input types.","code":""},{"path":"/reference/format_sequence_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format sequence difference analysis results — format_sequence_differences","text":"","code":"format_sequence_differences(differences)"},{"path":"/reference/format_sequence_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format sequence difference analysis results — format_sequence_differences","text":"differences Either character string containing direct analysis results complex analysis object","code":""},{"path":"/reference/format_sequence_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format sequence difference analysis results — format_sequence_differences","text":"Character string containing formatted sequence analysis results","code":""},{"path":"/reference/generate_code_co_occurrence_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"Performs comprehensive analysis code co-occurrences text, including calculation various similarity metrics generation network heatmap visualizations.","code":""},{"path":"/reference/generate_code_co_occurrence_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"","code":"generate_code_co_occurrence_analysis(   annotations,   text = NULL,   unit = \"paragraph\" )"},{"path":"/reference/generate_code_co_occurrence_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"annotations Data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation text Character string containing original text (optional) unit Character string specifying analytical unit: \"sentence\", \"paragraph\", \"document\"","code":""},{"path":"/reference/generate_code_co_occurrence_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"List containing: co_occurrence: Matrix raw co-occurrence counts jaccard_similarity: Matrix Jaccard similarity coefficients phi_coefficient: Matrix Phi coefficients network_plot: Network visualization code relationships heatmap_plot: Heatmap visualization code co-occurrences summary: List summary statistics","code":""},{"path":"/reference/generate_code_frequency_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate code frequency visualization — generate_code_frequency_plot","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"Creates barplot visualization showing frequency code annotations. plot displays codes x-axis frequency counts y-axis.","code":""},{"path":"/reference/generate_code_frequency_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"","code":"generate_code_frequency_plot(annotations)"},{"path":"/reference/generate_code_frequency_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"annotations Data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/generate_code_frequency_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"recordedplot object containing code frequency visualization","code":""},{"path":"/reference/generate_comparison_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coding patterns between different documents or coders — generate_comparison_analysis","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"Performs comprehensive comparison coding patterns different sets annotations, analyzing differences coverage, code application, overlaps, code sequences.","code":""},{"path":"/reference/generate_comparison_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"","code":"generate_comparison_analysis(annotations_list)"},{"path":"/reference/generate_comparison_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"annotations_list list data frames, data frame contains annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/generate_comparison_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"list containing comparison results analysis: coding_strategies: list analyzed coding patterns input comparison: list comparative analyses coding patterns","code":""},{"path":"/reference/generate_comparison_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate comparison visualizations — generate_comparison_plots","title":"Generate comparison visualizations — generate_comparison_plots","text":"Creates set visualizations comparing coding patterns different coders, including distribution comparisons, overlap patterns, sequence patterns.","code":""},{"path":"/reference/generate_comparison_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate comparison visualizations — generate_comparison_plots","text":"","code":"generate_comparison_plots(comparison_results)"},{"path":"/reference/generate_comparison_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate comparison visualizations — generate_comparison_plots","text":"comparison_results List containing results generate_comparison_analysis: coding_strategies: List analyzed coding patterns comparison: List comparative analyses","code":""},{"path":"/reference/generate_comparison_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate comparison visualizations — generate_comparison_plots","text":"List containing plot objects: distribution: Plot comparing code distribution patterns overlap: Plot showing code overlap patterns sequence: Plot displaying code sequence patterns","code":""},{"path":"/reference/generate_heatmap_visualization.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate heatmap visualization for code co-occurrence — generate_heatmap_visualization","title":"Generate heatmap visualization for code co-occurrence — generate_heatmap_visualization","text":"Creates heatmap showing strength relationships codes based Jaccard similarity coefficients. Darker colors indicate stronger relationships.","code":""},{"path":"/reference/generate_heatmap_visualization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate heatmap visualization for code co-occurrence — generate_heatmap_visualization","text":"","code":"generate_heatmap_visualization(jaccard_matrix, codes)"},{"path":"/reference/generate_heatmap_visualization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate heatmap visualization for code co-occurrence — generate_heatmap_visualization","text":"jaccard_matrix Matrix Jaccard similarity coefficients codes codes Character vector code names","code":""},{"path":"/reference/generate_heatmap_visualization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate heatmap visualization for code co-occurrence — generate_heatmap_visualization","text":"recordedplot object containing heatmap visualization","code":""},{"path":"/reference/generate_network_visualization.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate network visualization for code co-occurrence — generate_network_visualization","title":"Generate network visualization for code co-occurrence — generate_network_visualization","text":"Creates network plot showing relationships codes based co-occurrence patterns. Node sizes reflect total co-occurrences, edge thickness shows Jaccard similarity, edge opacity indicates phi coefficient magnitude.","code":""},{"path":"/reference/generate_network_visualization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate network visualization for code co-occurrence — generate_network_visualization","text":"","code":"generate_network_visualization(co_matrix, jaccard_matrix, phi_matrix, codes)"},{"path":"/reference/generate_network_visualization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate network visualization for code co-occurrence — generate_network_visualization","text":"co_matrix Matrix raw co-occurrence counts codes jaccard_matrix Matrix Jaccard similarity coefficients phi_matrix Matrix phi coefficients codes Character vector code names","code":""},{"path":"/reference/generate_network_visualization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate network visualization for code co-occurrence — generate_network_visualization","text":"recordedplot object containing network visualization","code":""},{"path":"/reference/generate_readable_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate readable highlight color — generate_readable_color","title":"Generate readable highlight color — generate_readable_color","text":"Generates random color provides good contrast black text ensuring color bright enough. Uses HSL color space maintain good saturation ensuring sufficient lightness.","code":""},{"path":"/reference/generate_readable_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate readable highlight color — generate_readable_color","text":"","code":"generate_readable_color()"},{"path":"/reference/generate_readable_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate readable highlight color — generate_readable_color","text":"Character string containing hex color code","code":""},{"path":"/reference/generate_text_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text summary statistics — generate_text_summary","title":"Generate text summary statistics — generate_text_summary","text":"Calculates basic summary statistics annotated text, including word counts, character counts, annotation counts, unique code counts.","code":""},{"path":"/reference/generate_text_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text summary statistics — generate_text_summary","text":"","code":"generate_text_summary(text, annotations)"},{"path":"/reference/generate_text_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text summary statistics — generate_text_summary","text":"text Character string containing text analyzed annotations Data frame annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/generate_text_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text summary statistics — generate_text_summary","text":"list containing summary statistics: total_words: total number words text total_characters: total number characters total_sentences: number sentences (approximated punctuation) total_paragraphs: number paragraphs (non-empty lines) total_annotations: number annotations unique_codes: number unique codes used","code":""},{"path":"/reference/generate_word_cloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate word cloud visualization — generate_word_cloud","title":"Generate word cloud visualization — generate_word_cloud","text":"Creates simple word cloud visualization input text, showing frequent words size proportional frequency.","code":""},{"path":"/reference/generate_word_cloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate word cloud visualization — generate_word_cloud","text":"","code":"generate_word_cloud(text)"},{"path":"/reference/generate_word_cloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate word cloud visualization — generate_word_cloud","text":"text Character string containing text visualize","code":""},{"path":"/reference/generate_word_cloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate word cloud visualization — generate_word_cloud","text":"plot object containing word cloud visualization","code":""},{"path":"/reference/getVolumes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available storage volumes on Windows — getVolumes","title":"Get available storage volumes on Windows — getVolumes","text":"Creates closure returns named vector available Windows drive letters corresponding paths. Checks existence drives : Z: (excluding C: handled separately).","code":""},{"path":"/reference/getVolumes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available storage volumes on Windows — getVolumes","text":"","code":"getVolumes()"},{"path":"/reference/getVolumes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available storage volumes on Windows — getVolumes","text":"Function returns named character vector available drives","code":""},{"path":"/reference/get_calendar_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get HTML entity for calendar icon — get_calendar_icon","title":"Get HTML entity for calendar icon — get_calendar_icon","text":"Returns HTML entity code calendar icon","code":""},{"path":"/reference/get_calendar_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get HTML entity for calendar icon — get_calendar_icon","text":"","code":"get_calendar_icon()"},{"path":"/reference/get_calendar_icon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get HTML entity for calendar icon — get_calendar_icon","text":"Character string containing HTML entity","code":""},{"path":"/reference/get_closed_folder_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get HTML entity for closed folder icon — get_closed_folder_icon","title":"Get HTML entity for closed folder icon — get_closed_folder_icon","text":"Returns HTML entity code closed folder icon","code":""},{"path":"/reference/get_closed_folder_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get HTML entity for closed folder icon — get_closed_folder_icon","text":"","code":"get_closed_folder_icon()"},{"path":"/reference/get_closed_folder_icon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get HTML entity for closed folder icon — get_closed_folder_icon","text":"Character string containing HTML entity","code":""},{"path":"/reference/get_code_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all code names from hierarchy — get_code_names","title":"Get all code names from hierarchy — get_code_names","text":"Recursively extracts code names code hierarchy tree structure, traversing nodes collecting names.","code":""},{"path":"/reference/get_code_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all code names from hierarchy — get_code_names","text":"","code":"get_code_names(node)"},{"path":"/reference/get_code_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all code names from hierarchy — get_code_names","text":"node Root node code hierarchy (data.tree Node object)","code":""},{"path":"/reference/get_code_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all code names from hierarchy — get_code_names","text":"Character vector containing code names hierarchy","code":""},{"path":"/reference/get_export_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get export directory — get_export_dir","title":"Get export directory — get_export_dir","text":"Returns path exports directory, creating necessary. directory used storing exported annotation data, visualizations, analysis results. function ensures directory exists accessible returning path.","code":""},{"path":"/reference/get_export_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get export directory — get_export_dir","text":"","code":"get_export_dir()"},{"path":"/reference/get_export_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get export directory — get_export_dir","text":"Character string containing path exports directory","code":""},{"path":"/reference/get_file_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get HTML entity for file icon — get_file_icon","title":"Get HTML entity for file icon — get_file_icon","text":"Returns HTML entity code file/document icon","code":""},{"path":"/reference/get_file_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get HTML entity for file icon — get_file_icon","text":"","code":"get_file_icon()"},{"path":"/reference/get_file_icon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get HTML entity for file icon — get_file_icon","text":"Character string containing HTML entity","code":""},{"path":"/reference/get_folder_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get HTML entity for folder icon — get_folder_icon","title":"Get HTML entity for folder icon — get_folder_icon","text":"Returns HTML entity code open folder icon","code":""},{"path":"/reference/get_folder_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get HTML entity for folder icon — get_folder_icon","text":"","code":"get_folder_icon()"},{"path":"/reference/get_folder_icon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get HTML entity for folder icon — get_folder_icon","text":"Character string containing HTML entity","code":""},{"path":"/reference/get_next_palette_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Get next color from palette with cycling — get_next_palette_color","title":"Get next color from palette with cycling — get_next_palette_color","text":"Returns next color predefined palette, cycling back beginning colors used. ensures consistent readable colors.","code":""},{"path":"/reference/get_next_palette_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get next color from palette with cycling — get_next_palette_color","text":"","code":"get_next_palette_color(used_colors)"},{"path":"/reference/get_next_palette_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get next color from palette with cycling — get_next_palette_color","text":"used_colors Character vector already used colors","code":""},{"path":"/reference/get_next_palette_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get next color from palette with cycling — get_next_palette_color","text":"Character string containing hex color code","code":""},{"path":"/reference/get_project_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get project directory path based on storage mode — get_project_dir","title":"Get project directory path based on storage mode — get_project_dir","text":"Retrieves creates project directory path project files stored, taking account user's selected storage mode.","code":""},{"path":"/reference/get_project_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get project directory path based on storage mode — get_project_dir","text":"","code":"get_project_dir(rv = NULL)"},{"path":"/reference/get_project_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get project directory path based on storage mode — get_project_dir","text":"rv ReactiveValues object containing application state (optional)","code":""},{"path":"/reference/get_project_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get project directory path based on storage mode — get_project_dir","text":"Character string containing project directory path, NULL applicable","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Null coalescing operator — grapes-or-or-grapes","title":"Null coalescing operator — grapes-or-or-grapes","text":"Provides null coalescing functionality, returning first non-NULL argument Provides null coalescing functionality, returning first non-NULL argument","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null coalescing operator — grapes-or-or-grapes","text":"","code":"a %||% b  a %||% b"},{"path":"/reference/grapes-or-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Null coalescing operator — grapes-or-or-grapes","text":"First value check b Second value (default) use first NULL","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Null coalescing operator — grapes-or-or-grapes","text":"Returns NULL, otherwise returns b Returns NULL, otherwise returns b","code":""},{"path":"/reference/grapes-or-or-grapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Null coalescing operator — grapes-or-or-grapes","text":"\\ \\","code":""},{"path":"/reference/handle_dir_confirmation.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle directory creation confirmation — handle_dir_confirmation","title":"Handle directory creation confirmation — handle_dir_confirmation","text":"Creates data directory receiving user confirmation","code":""},{"path":"/reference/handle_dir_confirmation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle directory creation confirmation — handle_dir_confirmation","text":"","code":"handle_dir_confirmation(input, rv, session)"},{"path":"/reference/handle_dir_confirmation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle directory creation confirmation — handle_dir_confirmation","text":"input Shiny input object rv ReactiveValues object containing application state session Shiny session object","code":""},{"path":"/reference/handle_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle errors with custom messages — handle_error","title":"Handle errors with custom messages — handle_error","text":"Provides error handling customizable success, error, completion messages. Wraps expressions tryCatch block displays appropriate notifications. Provides error handling customizable success, error, completion messages. Wraps expressions tryCatch block displays appropriate notifications. Provides error handling customizable success, error, completion messages. Wraps expressions tryCatch block displays appropriate notifications.","code":""},{"path":"/reference/handle_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle errors with custom messages — handle_error","text":"","code":"handle_error(expr, success_msg = NULL, error_msg = NULL, finally_msg = NULL)  handle_error(expr, success_msg = NULL, error_msg = NULL, finally_msg = NULL)  handle_error(expr, success_msg = NULL, error_msg = NULL, finally_msg = NULL)"},{"path":"/reference/handle_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle errors with custom messages — handle_error","text":"expr Expression evaluate success_msg Optional character string success notification error_msg Optional character string error notification finally_msg Optional character string completion notification","code":""},{"path":"/reference/handle_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle errors with custom messages — handle_error","text":"Result expression NULL error occurs Result expression NULL error occurs Result expression NULL error occurs","code":""},{"path":"/reference/handle_load_project_confirmation.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced project loading confirmation handler — handle_load_project_confirmation","title":"Enhanced project loading confirmation handler — handle_load_project_confirmation","text":"Handles loading projects support different storage modes","code":""},{"path":"/reference/handle_load_project_confirmation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced project loading confirmation handler — handle_load_project_confirmation","text":"","code":"handle_load_project_confirmation(input, output, session, rv, roots)"},{"path":"/reference/handle_load_project_confirmation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced project loading confirmation handler — handle_load_project_confirmation","text":"input Shiny input object output Shiny output object session Shiny session object rv ReactiveValues object containing application state roots List root directories selection","code":""},{"path":"/reference/handle_save_project_confirmation.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced save project confirmation handler — handle_save_project_confirmation","title":"Enhanced save project confirmation handler — handle_save_project_confirmation","text":"Processes project save confirmation based storage mode","code":""},{"path":"/reference/handle_save_project_confirmation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced save project confirmation handler — handle_save_project_confirmation","text":"","code":"handle_save_project_confirmation(input, output, session, rv, roots)"},{"path":"/reference/handle_save_project_confirmation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced save project confirmation handler — handle_save_project_confirmation","text":"input Shiny input object output Shiny output object session Shiny session object rv ReactiveValues object containing application state roots List root directories selection","code":""},{"path":"/reference/handle_storage_confirmation.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle directory storage confirmation — handle_storage_confirmation","title":"Handle directory storage confirmation — handle_storage_confirmation","text":"Processes user's storage location choice creates directories needed","code":""},{"path":"/reference/handle_storage_confirmation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle directory storage confirmation — handle_storage_confirmation","text":"","code":"handle_storage_confirmation(input, output, rv, session, roots)"},{"path":"/reference/handle_storage_confirmation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle directory storage confirmation — handle_storage_confirmation","text":"input Shiny input object output Shiny output object rv ReactiveValues object containing application state session Shiny session object roots List root directories selection","code":""},{"path":"/reference/hsl_to_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert HSL to RGB color values — hsl_to_rgb","title":"Convert HSL to RGB color values — hsl_to_rgb","text":"Converts HSL (Hue, Saturation, Lightness) color values RGB values. allows better control color brightness readability.","code":""},{"path":"/reference/hsl_to_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert HSL to RGB color values — hsl_to_rgb","text":"","code":"hsl_to_rgb(h, s, l)"},{"path":"/reference/hsl_to_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert HSL to RGB color values — hsl_to_rgb","text":"h Numeric, hue value (0-360) s Numeric, saturation value (0-1) l Numeric, lightness value (0-1)","code":""},{"path":"/reference/hsl_to_rgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert HSL to RGB color values — hsl_to_rgb","text":"Character string containing hex color code","code":""},{"path":"/reference/import_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Import code hierarchy from JSON format — import_hierarchy","title":"Import code hierarchy from JSON format — import_hierarchy","text":"Reconstructs code hierarchy tree structure JSON string representation, restoring node properties relationships.","code":""},{"path":"/reference/import_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import code hierarchy from JSON format — import_hierarchy","text":"","code":"import_hierarchy(json_string)"},{"path":"/reference/import_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import code hierarchy from JSON format — import_hierarchy","text":"json_string JSON string representation hierarchy","code":""},{"path":"/reference/import_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import code hierarchy from JSON format — import_hierarchy","text":"Node object representing reconstructed hierarchy","code":""},{"path":"/reference/init_data_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize data directory with user options — init_data_dir","title":"Initialize data directory with user options — init_data_dir","text":"Provides users options store annotation data: User's home directory (default R_user_dir location) Custom directory selected user Project-specific directory (per-project storage)","code":""},{"path":"/reference/init_data_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize data directory with user options — init_data_dir","text":"","code":"init_data_dir(session)"},{"path":"/reference/init_data_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize data directory with user options — init_data_dir","text":"session Shiny session object displaying dialog","code":""},{"path":"/reference/init_data_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize data directory with user options — init_data_dir","text":"Character string containing path selected data directory, NULL declined","code":""},{"path":"/reference/is_ancestor.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if one node is an ancestor of another — is_ancestor","title":"Check if one node is an ancestor of another — is_ancestor","text":"Helper function check node ancestor another node code hierarchy, preventing circular references moving items.","code":""},{"path":"/reference/is_ancestor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if one node is an ancestor of another — is_ancestor","text":"","code":"is_ancestor(potential_ancestor, node)"},{"path":"/reference/is_ancestor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if one node is an ancestor of another — is_ancestor","text":"potential_ancestor Node object check potential ancestor node Node object check ancestry ","code":""},{"path":"/reference/is_ancestor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if one node is an ancestor of another — is_ancestor","text":"Logical indicating whether potential_ancestor ancestor node","code":""},{"path":"/reference/is_color_readable.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate color readability — is_color_readable","title":"Validate color readability — is_color_readable","text":"Checks given color provides sufficient contrast black text. Uses luminance calculation determine readability.","code":""},{"path":"/reference/is_color_readable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate color readability — is_color_readable","text":"","code":"is_color_readable(color)"},{"path":"/reference/is_color_readable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate color readability — is_color_readable","text":"color Character string containing hex color code","code":""},{"path":"/reference/is_color_readable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate color readability — is_color_readable","text":"Logical indicating whether color readable","code":""},{"path":"/reference/load_project_from_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project from filepath — load_project_from_path","title":"Load project from filepath — load_project_from_path","text":"Loads project specified filepath","code":""},{"path":"/reference/load_project_from_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project from filepath — load_project_from_path","text":"","code":"load_project_from_path(rv, filepath, session)"},{"path":"/reference/load_project_from_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project from filepath — load_project_from_path","text":"rv ReactiveValues object containing application state filepath Path project file session Shiny session object","code":""},{"path":"/reference/load_project_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced project loading functionality — load_project_interactive","title":"Enhanced project loading functionality — load_project_interactive","text":"Provides improved project loading dialog options browse project files location, supporting project-specific storage model.","code":""},{"path":"/reference/load_project_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced project loading functionality — load_project_interactive","text":"","code":"load_project_interactive(rv, input, session, roots)"},{"path":"/reference/load_project_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced project loading functionality — load_project_interactive","text":"rv ReactiveValues object project state input Shiny input values session Shiny session object roots List root directories file selection","code":""},{"path":"/reference/load_project_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced project loading functionality — load_project_interactive","text":"Invisible NULL, called side effect","code":""},{"path":"/reference/load_project_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project state from file — load_project_state","title":"Load project state from file — load_project_state","text":"Loads previously saved project state RDS file. Performs version checking data structure validation loading process. Loads previously saved project state RDS file. Performs version checking data structure validation loading process.","code":""},{"path":"/reference/load_project_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project state from file — load_project_state","text":"","code":"load_project_state(filename)  load_project_state(filename)"},{"path":"/reference/load_project_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project state from file — load_project_state","text":"filename Character string specifying filename load","code":""},{"path":"/reference/load_project_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load project state from file — load_project_state","text":"List containing loaded project state, NULL loading fails List containing loaded project state, NULL loading fails","code":""},{"path":"/reference/load_selected_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project from a selected recent project — load_selected_project","title":"Load project from a selected recent project — load_selected_project","text":"Loads project list recent projects","code":""},{"path":"/reference/load_selected_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project from a selected recent project — load_selected_project","text":"","code":"load_selected_project(rv, input, session)"},{"path":"/reference/load_selected_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project from a selected recent project — load_selected_project","text":"rv ReactiveValues object containing application state input Shiny input object session Shiny session object","code":""},{"path":"/reference/move_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Move item in code hierarchy — move_item","title":"Move item in code hierarchy — move_item","text":"Moves code theme new location hierarchy preserving properties child nodes. Checks circular references maintains integrity hierarchy structure.","code":""},{"path":"/reference/move_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move item in code hierarchy — move_item","text":"","code":"move_item(node, item_path, new_parent_path)"},{"path":"/reference/move_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move item in code hierarchy — move_item","text":"node Root node hierarchy tree item_path Character vector specifying current path item new_parent_path Character vector specifying path new parent","code":""},{"path":"/reference/move_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move item in code hierarchy — move_item","text":"Updated node hierarchy item moved new location","code":""},{"path":"/reference/plot_code_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot code distribution visualization — plot_code_distribution","title":"Plot code distribution visualization — plot_code_distribution","text":"Creates barplot visualization showing distribution codes annotations. plot includes rotated labels better readability handles empty NULL input data gracefully.","code":""},{"path":"/reference/plot_code_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot code distribution visualization — plot_code_distribution","text":"","code":"plot_code_distribution(distribution, main = \"\", ...)"},{"path":"/reference/plot_code_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot code distribution visualization — plot_code_distribution","text":"distribution List containing code distribution information: frequencies: Named numeric vector containing code frequencies main Character string specifying plot title ... Additional arguments passed barplot()","code":""},{"path":"/reference/plot_code_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot code distribution visualization — plot_code_distribution","text":"Invisible NULL, called side effect creating plot","code":""},{"path":"/reference/plot_overlap_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot code overlap patterns — plot_overlap_patterns","title":"Plot code overlap patterns — plot_overlap_patterns","text":"Creates barplot visualization code overlap patterns, showing frequency different code co-occurrences rotated labels better readability.","code":""},{"path":"/reference/plot_overlap_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot code overlap patterns — plot_overlap_patterns","text":"","code":"plot_overlap_patterns(overlaps, main = \"\", ...)"},{"path":"/reference/plot_overlap_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot code overlap patterns — plot_overlap_patterns","text":"overlaps List containing overlap information: combinations: List containing frequencies code co-occurrences main Character string plot title ... Additional arguments passed barplot()","code":""},{"path":"/reference/plot_overlap_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot code overlap patterns — plot_overlap_patterns","text":"Invisible NULL, called side effect creating plot","code":""},{"path":"/reference/plot_sequence_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot code sequence patterns — plot_sequence_patterns","title":"Plot code sequence patterns — plot_sequence_patterns","text":"Creates barplot visualization code sequence patterns, showing frequency different code transitions rotated labels better readability.","code":""},{"path":"/reference/plot_sequence_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot code sequence patterns — plot_sequence_patterns","text":"","code":"plot_sequence_patterns(sequences, main = \"\", ...)"},{"path":"/reference/plot_sequence_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot code sequence patterns — plot_sequence_patterns","text":"sequences List containing sequence information: transitions: List code transitions main Character string plot title ... Additional arguments passed barplot()","code":""},{"path":"/reference/plot_sequence_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot code sequence patterns — plot_sequence_patterns","text":"Invisible NULL, called side effect creating plot","code":""},{"path":"/reference/process_comparison_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Process comparison file — process_comparison_file","title":"Process comparison file — process_comparison_file","text":"Processes uploaded comparison files, handling different file formats (CSV, JSON) ensuring proper data structure types comparison analysis.","code":""},{"path":"/reference/process_comparison_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process comparison file — process_comparison_file","text":"","code":"process_comparison_file(filepath)"},{"path":"/reference/process_comparison_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process comparison file — process_comparison_file","text":"filepath Character string specifying path comparison file","code":""},{"path":"/reference/process_comparison_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process comparison file — process_comparison_file","text":"Data frame containing processed annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"/reference/remove_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove annotation without deleting code — remove_annotation","title":"Remove annotation without deleting code — remove_annotation","text":"Removes specific annotation instance preserving code use annotations.","code":""},{"path":"/reference/remove_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove annotation without deleting code — remove_annotation","text":"","code":"remove_annotation(rv, start, end, code)"},{"path":"/reference/remove_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove annotation without deleting code — remove_annotation","text":"rv ReactiveValues object containing annotations start Starting position annotation remove end Ending position annotation remove code Code annotation remove","code":""},{"path":"/reference/remove_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove annotation without deleting code — remove_annotation","text":"Updated rv object annotation removed","code":""},{"path":"/reference/restore_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore a node and its children in the hierarchy — restore_node","title":"Restore a node and its children in the hierarchy — restore_node","text":"Helper function recursively restore node children moving items code hierarchy.","code":""},{"path":"/reference/restore_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore a node and its children in the hierarchy — restore_node","text":"","code":"restore_node(parent, node_data)"},{"path":"/reference/restore_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore a node and its children in the hierarchy — restore_node","text":"parent Parent Node object node restored node_data List containing node data restore: name: Character string node name type: Character string specifying node type description: Character string node description created: POSIXct creation timestamp children: List child nodes","code":""},{"path":"/reference/restore_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore a node and its children in the hierarchy — restore_node","text":"New Node object restored data children","code":""},{"path":"/reference/save_annotated_text_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Display interactive dialog for saving annotated text — save_annotated_text_interactive","title":"Display interactive dialog for saving annotated text — save_annotated_text_interactive","text":"Creates displays modal dialog allows users save annotated text either HTML plain text format. Provides options filename directory selection.","code":""},{"path":"/reference/save_annotated_text_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display interactive dialog for saving annotated text — save_annotated_text_interactive","text":"","code":"save_annotated_text_interactive(rv, input, session, volumes)"},{"path":"/reference/save_annotated_text_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display interactive dialog for saving annotated text — save_annotated_text_interactive","text":"rv ReactiveValues object containing application state input Shiny input object session Shiny session object volumes List available storage volumes directory selection","code":""},{"path":"/reference/save_annotated_text_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display interactive dialog for saving annotated text — save_annotated_text_interactive","text":"Invisible NULL, called side effects","code":""},{"path":"/reference/save_as_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Save annotated text as HTML document — save_as_html","title":"Save annotated text as HTML document — save_as_html","text":"Creates HTML document containing annotated text proper styling code highlights formatting, preserving line breaks. Creates HTML document containing annotated text proper styling code highlights formatting.","code":""},{"path":"/reference/save_as_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save annotated text as HTML document — save_as_html","text":"","code":"save_as_html(filename, rv)  save_as_html(filename, rv)"},{"path":"/reference/save_as_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save annotated text as HTML document — save_as_html","text":"filename Character string specifying output file path rv ReactiveValues object containing: text: Original text content annotations: Data frame annotations code_colors: Named character vector code colors","code":""},{"path":"/reference/save_as_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save annotated text as HTML document — save_as_html","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"/reference/save_as_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Save annotated text as plain text — save_as_text","title":"Save annotated text as plain text — save_as_text","text":"Creates plain text file containing annotated text code markers. Creates plain text file containing annotated text code markers.","code":""},{"path":"/reference/save_as_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save annotated text as plain text — save_as_text","text":"","code":"save_as_text(filename, rv)  save_as_text(filename, rv)"},{"path":"/reference/save_as_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save annotated text as plain text — save_as_text","text":"filename Character string specifying output file path rv ReactiveValues object containing: text: Original text content annotations: Data frame annotations","code":""},{"path":"/reference/save_as_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save annotated text as plain text — save_as_text","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"/reference/save_project_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced save project interactive dialog — save_project_interactive","title":"Enhanced save project interactive dialog — save_project_interactive","text":"Shows modal dialog saving project options based selected storage mode. project-specific mode, always requires directory selection.","code":""},{"path":"/reference/save_project_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced save project interactive dialog — save_project_interactive","text":"","code":"save_project_interactive(rv, input, session, roots)"},{"path":"/reference/save_project_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced save project interactive dialog — save_project_interactive","text":"rv ReactiveValues object containing project state input Shiny input values session Shiny session object roots List available storage volumes directory selection","code":""},{"path":"/reference/save_project_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced save project interactive dialog — save_project_interactive","text":"Invisible NULL, called side effect","code":""},{"path":"/reference/save_project_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and manage project state — save_project_state","title":"Save and manage project state — save_project_state","text":"Saves current state text annotation project, including annotations, codes, memos. Creates necessary directories handles file operations safely. Saves current project state including text, annotations, codes, code tree, metadata RDS file. Creates projects directory exist.","code":""},{"path":"/reference/save_project_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and manage project state — save_project_state","text":"","code":"save_project_state(state, filename)  save_project_state(state, filename)"},{"path":"/reference/save_project_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and manage project state — save_project_state","text":"state List containing project state elements: text: Character string current text annotations: Data frame annotations codes: Character vector codes code_tree: Node object representing code hierarchy code_colors: Named vector code colors memos: List memos code_descriptions: List code descriptions filename Character string specifying filename saving","code":""},{"path":"/reference/save_project_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and manage project state — save_project_state","text":"Invisible NULL, called side effect saving project state Invisible NULL. Called side effect saving project state.","code":""},{"path":"/reference/save_records_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Display interactive dialog for saving annotation records — save_records_interactive","title":"Display interactive dialog for saving annotation records — save_records_interactive","text":"Creates displays modal dialog allows users save annotation records either CSV JSON format. Provides options filename directory selection.","code":""},{"path":"/reference/save_records_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display interactive dialog for saving annotation records — save_records_interactive","text":"","code":"save_records_interactive(rv, input, session, volumes)"},{"path":"/reference/save_records_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display interactive dialog for saving annotation records — save_records_interactive","text":"rv ReactiveValues object containing application state input Shiny input object session Shiny session object volumes List available storage volumes directory selection","code":""},{"path":"/reference/save_records_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display interactive dialog for saving annotation records — save_records_interactive","text":"Invisible NULL, called side effects","code":""},{"path":"/reference/sync_codes_with_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync codes with hierarchy after loading project — sync_codes_with_hierarchy","title":"Sync codes with hierarchy after loading project — sync_codes_with_hierarchy","text":"Ensures codes rv$codes properly represented hierarchy loading project, adding missing codes root level","code":""},{"path":"/reference/sync_codes_with_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync codes with hierarchy after loading project — sync_codes_with_hierarchy","text":"","code":"sync_codes_with_hierarchy(rv)"},{"path":"/reference/sync_codes_with_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync codes with hierarchy after loading project — sync_codes_with_hierarchy","text":"rv ReactiveValues object containing application state","code":""},{"path":"/reference/sync_codes_with_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sync codes with hierarchy after loading project — sync_codes_with_hierarchy","text":"Updated ReactiveValues object","code":""},{"path":"/reference/textAnnotatoR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"textAnnotatoR: Interactive Text Annotation Tool with 'shiny' GUI — textAnnotatoR-package","title":"textAnnotatoR: Interactive Text Annotation Tool with 'shiny' GUI — textAnnotatoR-package","text":"lightweight focused text annotation tool built 'shiny'. Provides interactive graphical user interface coding text documents, managing code hierarchies, creating memos, analyzing coding patterns. Features include code co-occurrence analysis, visualization coding patterns, comparison multiple coding sets, export capabilities. Supports collaborative qualitative research standardized annotation formats analysis tools.","code":""},{"path":[]},{"path":"/reference/textAnnotatoR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"textAnnotatoR: Interactive Text Annotation Tool with 'shiny' GUI — textAnnotatoR-package","text":"Maintainer: Chao Liu chaoliu@cedarville.edu (ORCID) [copyright holder]","code":""},{"path":"/reference/textAnnotatoR.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Annotation Tool for R — textAnnotatoR","title":"Text Annotation Tool for R — textAnnotatoR","text":"Shiny application interactive text annotation analysis Provides interactive graphical user interface qualitative text analysis, allowing users annotate text, manage codes, create memos, visualize coding patterns.","code":""},{"path":"/reference/textAnnotatoR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Text Annotation Tool for R — textAnnotatoR","text":"package includes tools : Text annotation coding Code management organization Memo creation linking Project management Visualization coding patterns Export annotations analyses","code":""},{"path":"/reference/textAnnotatoR.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Text Annotation Tool for R — textAnnotatoR","text":"package provides functionality users interactively save files Shiny interface. file operations explicitly initiated users file dialogs, files written automatically user's system without direct action consent.","code":""},{"path":"/reference/textAnnotatoR.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Text Annotation Tool for R — textAnnotatoR","text":"package requires following packages: shiny data.tree jsonlite shinydashboard DT readtext magrittr","code":""},{"path":[]},{"path":"/reference/textAnnotatoR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Text Annotation Tool for R — textAnnotatoR","text":"Chao Liu","code":""},{"path":"/reference/update_dark_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Update existing dark colors to readable ones — update_dark_colors","title":"Update existing dark colors to readable ones — update_dark_colors","text":"Checks existing code colors replaces dark readable alternatives trying maintain color diversity.","code":""},{"path":"/reference/update_dark_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update existing dark colors to readable ones — update_dark_colors","text":"","code":"update_dark_colors(rv)"},{"path":"/reference/update_dark_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update existing dark colors to readable ones — update_dark_colors","text":"rv ReactiveValues object containing code colors","code":""},{"path":"/reference/update_dark_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update existing dark colors to readable ones — update_dark_colors","text":"Updated ReactiveValues object","code":""},{"path":"/reference/update_text_display.html","id":null,"dir":"Reference","previous_headings":"","what":"Update text display with annotations — update_text_display","title":"Update text display with annotations — update_text_display","text":"Creates HTML representation text annotations, highlighting codes assigned colors preserving line breaks.","code":""},{"path":"/reference/update_text_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update text display with annotations — update_text_display","text":"","code":"update_text_display(rv)"},{"path":"/reference/update_text_display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update text display with annotations — update_text_display","text":"rv ReactiveValues object containing text annotations","code":""},{"path":"/reference/update_text_display.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update text display with annotations — update_text_display","text":"HTML string containing formatted text annotations","code":""},{"path":"/reference/validate_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate directory access — validate_directory","title":"Validate directory access — validate_directory","text":"Checks directory exists accessible reading writing. function performs comprehensive checks ensure directory can used file operations.","code":""},{"path":"/reference/validate_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate directory access — validate_directory","text":"","code":"validate_directory(dir_path)"},{"path":"/reference/validate_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate directory access — validate_directory","text":"dir_path Character string containing directory path validate","code":""},{"path":"/reference/validate_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate directory access — validate_directory","text":"Logical indicating whether directory valid accessible","code":""},{"path":"/reference/visualize_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate visual representation of code hierarchy — visualize_hierarchy","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"Creates HTML tree visualization code hierarchy proper indentation, icons, interactive elements. Now also displays unassigned codes.","code":""},{"path":"/reference/visualize_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"","code":"visualize_hierarchy(node, all_codes = NULL)"},{"path":"/reference/visualize_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"node Root node hierarchy tree attributes all_codes Character vector codes application","code":""},{"path":"/reference/visualize_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"Character string containing HTML markup tree visualization","code":""},{"path":"/news/index.html","id":"textannotator-011","dir":"Changelog","previous_headings":"","what":"textAnnotatoR 0.1.1","title":"textAnnotatoR 0.1.1","text":"Initial CRAN submission.","code":""}]
