[{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using the Text Annotation Interface","text":"Text Annotation Interface provides comprehensive environment qualitative data analysis text annotation. vignette guide using interface effectively, basic text annotation advanced features like code hierarchies comparative analysis.","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"launching-the-interface","dir":"Articles","previous_headings":"Getting Started","what":"Launching the Interface","title":"Using the Text Annotation Interface","text":"start using text annotation interface, simply call annotate_gui() function: open Shiny application default web browser. interface divided several tabs, offering different functionality annotation work. Main Interface Overview","code":"library(textAnnotatoR) annotate_gui()"},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"interface-overview","dir":"Articles","previous_headings":"Getting Started","what":"Interface Overview","title":"Using the Text Annotation Interface","text":"interface consists : top toolbar project management buttons main content area multiple tabs Side margins quick-access tools text display area showing document","code":""},{"path":[]},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"creating-a-new-project","dir":"Articles","previous_headings":"Basic Operations > Project Management","what":"Creating a New Project","title":"Using the Text Annotation Interface","text":"Click “New Project” button top toolbar unsaved changes, ’ll prompted save Confirm creation new project New Project Dialog","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"saving-projects","dir":"Articles","previous_headings":"Basic Operations > Project Management","what":"Saving Projects","title":"Using the Text Annotation Interface","text":"Click “Save Project” Enter project name Choose save location Click “Save” confirm","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"loading-projects","dir":"Articles","previous_headings":"Basic Operations > Project Management","what":"Loading Projects","title":"Using the Text Annotation Interface","text":"Click “Load Project” Navigate project file Select file click “Load”","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"importing-text","dir":"Articles","previous_headings":"Basic Operations > Text Import and Management","what":"Importing Text","title":"Using the Text Annotation Interface","text":"Go “File” tab Click “Choose File” select text document .txt files .docx files .pdf files Click “Import Text” load content File Import Interface","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"selecting-text","dir":"Articles","previous_headings":"Basic Operations > Basic Annotation","what":"Selecting Text","title":"Using the Text Annotation Interface","text":"Click selection tool (cursor icon) right margin Click drag across text want annotate selected text highlighted yellow","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"applying-codes","dir":"Articles","previous_headings":"Basic Operations > Basic Annotation","what":"Applying Codes","title":"Using the Text Annotation Interface","text":"Enter new code “Code” field Select existing code dropdown Click “Apply Code” annotate selection coded text highlighted unique color","code":"# Example of code application via the API (if available) annotate_text(selected_text, code = \"important_theme\")"},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"adding-memos","dir":"Articles","previous_headings":"Basic Operations > Basic Annotation","what":"Adding Memos","title":"Using the Text Annotation Interface","text":"Select text annotate Enter memo “Memo” text area Click “Save” attach memo selection","code":""},{"path":[]},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"code-hierarchy","dir":"Articles","previous_headings":"Advanced Features > Code Management","what":"Code Hierarchy","title":"Using the Text Annotation Interface","text":"“Themes” tab allows organize codes hierarchically: Click “Add Theme” create new theme Use “Add Code Theme” organize existing codes hierarchy displayed tree structure","code":"# Example of code hierarchy structure codes <- list(   \"Methods\" = c(\"Qualitative\", \"Quantitative\"),   \"Results\" = c(\"Findings\", \"Discussion\") )"},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"merging-codes","dir":"Articles","previous_headings":"Advanced Features > Code Management","what":"Merging Codes","title":"Using the Text Annotation Interface","text":"Click “Merge Codes” button Select codes want merge Enter name new merged code Confirm merge","code":"# Example of code merging logic merge_codes(c(\"code1\", \"code2\"), new_code = \"merged_code\")"},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"code-frequency-analysis","dir":"Articles","previous_headings":"Advanced Features > Analysis Tools","what":"Code Frequency Analysis","title":"Using the Text Annotation Interface","text":"Click “Code Frequency” Analysis tab View bar chart showing code usage frequency Export results needed","code":"# Example of frequency analysis analyze_code_frequency(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"code-co-occurrence-analysis","dir":"Articles","previous_headings":"Advanced Features > Analysis Tools","what":"Code Co-occurrence Analysis","title":"Using the Text Annotation Interface","text":"Click “Code Co-occurrence” Network visualization Heatmap view Statistical summary Code Co-occurrence Analysis","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"text-summary","dir":"Articles","previous_headings":"Advanced Features > Analysis Tools","what":"Text Summary","title":"Using the Text Annotation Interface","text":"Generate basic statistics text annotations:","code":"# Example of summary statistics summary_stats <- analyze_text(text, annotations) print(summary_stats)"},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"comparison-tools","dir":"Articles","previous_headings":"Advanced Features","what":"Comparison Tools","title":"Using the Text Annotation Interface","text":"comparison tab allows analyze coding patterns different coders: Upload two sets annotations Select analysis metrics Distribution plots Overlap analysis Sequence patterns","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"saving-annotations","dir":"Articles","previous_headings":"Exporting Data","what":"Saving Annotations","title":"Using the Text Annotation Interface","text":"Go “Records” tab Click “Save Records” CSV JSON Select save location","code":"# Example of saving annotations save_annotations(annotations, \"output.csv\")"},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"exporting-annotated-text","dir":"Articles","previous_headings":"Exporting Data","what":"Exporting Annotated Text","title":"Using the Text Annotation Interface","text":"Click “Save Annotated Text” HTML (maintains formatting colors) Text (includes code markers) Select save location","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"organizing-your-work","dir":"Articles","previous_headings":"Best Practices","what":"Organizing Your Work","title":"Using the Text Annotation Interface","text":"Create meaningful code names Use themes group related codes Add descriptive memos Save work frequently","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"efficient-coding","dir":"Articles","previous_headings":"Best Practices","what":"Efficient Coding","title":"Using the Text Annotation Interface","text":"Use selection tool precise text selection Utilize keyboard shortcuts available Organize codes hierarchically patterns emerge Review merge similar codes periodically","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"quality-control","dir":"Articles","previous_headings":"Best Practices","what":"Quality Control","title":"Using the Text Annotation Interface","text":"Regularly review coding scheme Use comparison tools check coding consistency Export backup work frequently Document coding decisions memos","code":""},{"path":[]},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"text-import-problems","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Text Import Problems","title":"Using the Text Annotation Interface","text":"Ensure text file supported format Check encoding issues Try breaking large files smaller segments","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"saving-issues","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Saving Issues","title":"Using the Text Annotation Interface","text":"Verify write permissions Check available disk space Use relative paths possible","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"display-problems","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Display Problems","title":"Using the Text Annotation Interface","text":"Clear browser cache Try different browser Check browser compatibility","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"getting-help","dir":"Articles","previous_headings":"Troubleshooting","what":"Getting Help","title":"Using the Text Annotation Interface","text":"encounter issues: Check error messages Review documentation Look similar issues project repository Contact support specific details problem","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Using the Text Annotation Interface","text":"Text Annotation Interface provides robust environment qualitative data analysis. following guide exploring various features, can develop efficient workflow annotation projects. Remember : Save work regularly Organize codes effectively Use analysis tools gain insights Follow best practices consistent results","code":""},{"path":"http://liu-chao.site/textAnnotatoR/articles/textAnnotatoR_gui.html","id":"references","dir":"Articles","previous_headings":"Conclusion","what":"References","title":"Using the Text Annotation Interface","text":"Note: vignette reflects current version Text Annotation Interface. Features may updated changed future versions.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chao Liu. Author, maintainer, copyright holder.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chao Liu (2024). textAnnotatoR: Interactive Text Annotation Tool Shiny GUI. R package version 0.1.1, http://liu-chao.site/textAnnotatoR/, https://github.com/chaoliu-cl/textAnnotatoR.","code":"@Manual{,   title = {textAnnotatoR: Interactive Text Annotation Tool with Shiny GUI},   author = {{Chao Liu}},   year = {2024},   note = {R package version 0.1.1, http://liu-chao.site/textAnnotatoR/},   url = {https://github.com/chaoliu-cl/textAnnotatoR}, }"},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Interactive Text Annotation Tool with Shiny GUI","text":"textAnnotatoR comprehensive text annotation tool built Shiny, designed facilitate qualitative data analysis intuitive graphical user interface. provides researchers, analysts, qualitative data scientists robust environment coding text documents, managing code hierarchies, creating memos, analyzing coding patterns. package supports collaborative research standardized annotation formats provides powerful tools comparing two coding sets, analyzing code co-occurrences, visualizing coding patterns.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Interactive Text Annotation Tool with Shiny GUI","text":"Interactive text selection annotation Hierarchical code organization themes Real-time memo creation linking Code co-occurrence analysis visualization Multi-coder comparison tools Project management capabilities Export options annotated text analysis results","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive Text Annotation Tool with Shiny GUI","text":"can install development version textAnnotatoR GitHub using:","code":"# Install textAnnotatoR - From CRAN:  install.packages('textAnnotatoR') - From Github: remotes::install_github(\"chaoliu-cl/textAnnotatoR\")"},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"quick-start-example","dir":"","previous_headings":"","what":"Quick Start Example","title":"Interactive Text Annotation Tool with Shiny GUI","text":"’s basic example launch annotation interface start coding text: open Shiny application default web browser. , can: Import text document (supports .txt, .docx, .pdf) Select text using cursor tool Apply codes create memos Organize codes themes Analyze coding patterns co-occurrences","code":"library(textAnnotatoR)  # Launch the annotation interface annotate_gui()"},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"package-components","dir":"","previous_headings":"","what":"Package Components","title":"Interactive Text Annotation Tool with Shiny GUI","text":"package structured around several main components:","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"core-interface","dir":"","previous_headings":"Package Components","what":"Core Interface","title":"Interactive Text Annotation Tool with Shiny GUI","text":"annotate_gui(): main function launches interactive interface Project management tools saving loading annotation projects Text import display functionality","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"code-management","dir":"","previous_headings":"Package Components","what":"Code Management","title":"Interactive Text Annotation Tool with Shiny GUI","text":"Hierarchical code organization themes Code merging renaming capabilities Color-coded visualization annotations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"analysis-tools","dir":"","previous_headings":"Package Components","what":"Analysis Tools","title":"Interactive Text Annotation Tool with Shiny GUI","text":"Code frequency analysis Co-occurrence analysis network heatmap visualizations Pattern recognition code sequences Multi-coder comparison tools","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"export-capabilities","dir":"","previous_headings":"Package Components","what":"Export Capabilities","title":"Interactive Text Annotation Tool with Shiny GUI","text":"Export annotations CSV JSON format Save annotated text highlighting Generate analysis reports visualizations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Interactive Text Annotation Tool with Shiny GUI","text":"detailed information, please refer package vignettes: Key vignettes include: - Getting Started textAnnotatoR - Managing Code Hierarchies - Analyzing Coding Patterns - Comparing Multiple Coders","code":"# View available vignettes browseVignettes(\"textAnnotatoR\")"},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"ecosystem-integration","dir":"","previous_headings":"","what":"Ecosystem Integration","title":"Interactive Text Annotation Tool with Shiny GUI","text":"textAnnotatoR designed work seamlessly broader R ecosystem qualitative data analysis: Imports text common document formats using readtext Utilizes data.tree efficient hierarchy management Leverages shiny shinydashboard interactive interface Integrates DT data display manipulation package fills gap R qualitative analysis ecosystem providing user-friendly GUI maintaining programmatic access functionality.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Interactive Text Annotation Tool with Shiny GUI","text":"Contributions welcome! Please feel free submit Pull Request. major changes, please open issue first discuss like change.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Interactive Text Annotation Tool with Shiny GUI","text":"project licensed GPL-3 License.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Interactive Text Annotation Tool with Shiny GUI","text":"use textAnnotatoR research, please cite :","code":"citation(\"textAnnotatoR\")"},{"path":"http://liu-chao.site/textAnnotatoR/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Interactive Text Annotation Tool with Shiny GUI","text":"Issues: Please report issues GitHub issues page Email: chaoliu@cedarville.edu X: @X","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/addJS.html","id":null,"dir":"Reference","previous_headings":"","what":"JavaScript code for handling text selection and UI interactions — addJS","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"internal JavaScript code provides functionality text selection, popup menus, interactive UI elements text annotation interface. manages mouse events text selection, highlighting, code application.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/addJS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"character string containing JavaScript code","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/addJS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"JavaScript code implements following functionality: Creation management popup menus code operations Text selection handling mouse events Highlighting selected text Communication Shiny server custom message handlers Event handling code replacement, renaming, deletion","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/addJS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"internal function used textAnnotatoR package called directly users.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/addJS.html","id":"event-handlers","dir":"Reference","previous_headings":"","what":"Event Handlers","title":"JavaScript code for handling text selection and UI interactions — addJS","text":"Text selection events (mousedown, mousemove, mouseup) Popup menu events code operations Custom Shiny message handlers selection state","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Add action to history — add_action","title":"Add action to history — add_action","text":"Add action history","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add action to history — add_action","text":"","code":"add_action(rv, action)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add action to history — add_action","text":"rv Reactive values object action Action add","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_action.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add action to history — add_action","text":"","code":"if (FALSE) { # \\dontrun{ # Initialize reactive values rv <- reactiveValues(   action_history = list(),   action_index = 0 )  # Create and add an action action <- create_action(   type = \"add_annotation\",   data = list(start = 1, end = 10, code = \"example\") ) add_action(rv, action) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_code_to_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add code to theme in hierarchy — add_code_to_theme","title":"Add code to theme in hierarchy — add_code_to_theme","text":"Adds new code specific theme code hierarchy. code can added root level nested within existing themes. Adds new code specific theme code hierarchy. code can added root level nested within existing themes.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_code_to_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add code to theme in hierarchy — add_code_to_theme","text":"","code":"add_code_to_theme(node, code_name, theme_path, description = \"\")  add_code_to_theme(node, code_name, theme_path, description = \"\")"},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_code_to_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add code to theme in hierarchy — add_code_to_theme","text":"node Root node hierarchy tree code_name Character string specifying name code add theme_path Character vector specifying path target theme description Optional character string providing description code","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_code_to_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add code to theme in hierarchy — add_code_to_theme","text":"Updated node new code added Updated node new code added","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_code_to_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add code to theme in hierarchy — add_code_to_theme","text":"","code":"if (FALSE) { # \\dontrun{ # Create root node root <- Node$new(\"Root\")  # Add code to root level root <- add_code_to_theme(root, \"Interview\", character(0),                          \"Interview transcript marker\")  # Add code to specific theme root <- add_code_to_theme(root, \"Grounded Theory\", c(\"Methods\", \"Qualitative\"),                          \"Grounded theory methodology\") } # }  if (FALSE) { # \\dontrun{ # Create root node root <- Node$new(\"Root\")  # Add code to root level root <- add_code_to_theme(root, \"Interview\", character(0),                          \"Interview transcript marker\")  # Add code to specific theme root <- add_code_to_theme(root, \"Grounded Theory\", c(\"Methods\", \"Qualitative\"),                          \"Grounded theory methodology\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add theme to code hierarchy — add_theme","title":"Add theme to code hierarchy — add_theme","text":"Adds new theme code hierarchy tree. Themes can used organize group related codes hierarchical structure. Adds new theme code hierarchy tree. Themes can used organize group related codes hierarchical structure.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add theme to code hierarchy — add_theme","text":"","code":"add_theme(node, theme_name, description = \"\")  add_theme(node, theme_name, description = \"\")"},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add theme to code hierarchy — add_theme","text":"node Root node hierarchy tree theme_name Character string specifying name new theme description Optional character string providing description theme","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add theme to code hierarchy — add_theme","text":"Updated node new theme added Updated node new theme added","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/add_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add theme to code hierarchy — add_theme","text":"","code":"if (FALSE) { # \\dontrun{ # Create root node root <- Node$new(\"Root\")  # Add a new theme root <- add_theme(root, \"Methods\", \"Research methodology codes\")  # Add a sub-theme root <- add_theme(root, \"Qualitative Methods\", \"Qualitative research approaches\") } # }  if (FALSE) { # \\dontrun{ # Create root node root <- Node$new(\"Root\")  # Add a new theme root <- add_theme(root, \"Methods\", \"Research methodology codes\")  # Add a sub-theme root <- add_theme(root, \"Qualitative Methods\", \"Qualitative research approaches\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_co_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze code co-occurrence patterns — analyze_co_occurrences","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"Analyzes different codes co-occur within annotated text examining overlapping annotations calculating various metrics co-occurrence strength. Analyzes different codes co-occur within annotated text examining overlapping annotations calculating various metrics co-occurrence strength.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_co_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"","code":"analyze_co_occurrences(annotations)  analyze_co_occurrences(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_co_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"annotations data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_co_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"list containing co-occurrence analysis results: combinations: list containing frequency table code co-occurrences characteristics: list average overlap length total overlap count list containing co-occurrence analysis results: combinations: list containing frequency table code co-occurrences characteristics: list average overlap length total overlap count","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_co_occurrences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze code co-occurrence patterns — analyze_co_occurrences","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 10),   end = c(8, 15, 20),   code = c(\"code1\", \"code2\", \"code1\") ) results <- analyze_co_occurrences(annotations) } # } if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 10),   end = c(8, 15, 20),   code = c(\"code1\", \"code2\", \"code1\") ) results <- analyze_co_occurrences(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze context around code applications — analyze_code_context","title":"Analyze context around code applications — analyze_code_context","text":"Examines surrounding context codes applied looking preceding following annotations understand code relationships. Examines surrounding context codes applied looking preceding following annotations understand code relationships.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze context around code applications — analyze_code_context","text":"","code":"analyze_code_context(code_anns, all_anns)  analyze_code_context(code_anns, all_anns)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze context around code applications — analyze_code_context","text":"code_anns Data frame containing annotations specific code: start: numeric, starting position end: numeric, ending position code: character, code identifier all_anns Data frame containing annotations text","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze context around code applications — analyze_code_context","text":"List contexts code instance: : Preceding annotation exists : Following annotation exists List contexts code instance: : Preceding annotation exists : Following annotation exists","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze context around code applications — analyze_code_context","text":"","code":"if (FALSE) { # \\dontrun{ all_annotations <- data.frame(   start = c(1, 10, 20, 30),   end = c(5, 15, 25, 35),   code = c(\"code1\", \"code2\", \"code1\", \"code3\") ) code1_anns <- all_annotations[all_annotations$code == \"code1\", ] contexts <- analyze_code_context(code1_anns, all_annotations) } # } if (FALSE) { # \\dontrun{ all_annotations <- data.frame(   start = c(1, 10, 20, 30),   end = c(5, 15, 25, 35),   code = c(\"code1\", \"code2\", \"code1\", \"code3\") ) code1_anns <- all_annotations[all_annotations$code == \"code1\", ] contexts <- analyze_code_context(code1_anns, all_annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze code application patterns — analyze_code_patterns","title":"Analyze code application patterns — analyze_code_patterns","text":"Analyzes patterns codes applied annotations. Analyzes patterns codes applied annotations.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze code application patterns — analyze_code_patterns","text":"","code":"analyze_code_patterns(annotations)  analyze_code_patterns(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze code application patterns — analyze_code_patterns","text":"annotations Data frame containing code annotations columns: start: numeric, starting position end: numeric, ending position code: character, code identifier","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_code_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze code application patterns — analyze_code_patterns","text":"List containing: patterns: List code patterns summary: Summary statistics List containing: patterns: List code patterns summary: Summary statistics","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze coverage patterns in annotations — analyze_coverage","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"Analyzes codes distributed throughout text, including clustering patterns coding density. Analyzes codes distributed throughout text, including clustering patterns coding density.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"","code":"analyze_coverage(annotations)  analyze_coverage(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"annotations Data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"List containing: clusters: List annotation clusters density: List containing overall density metrics distribution: List containing code frequencies positions List containing: clusters: List annotation clusters density: List containing overall density metrics distribution: List containing code frequencies positions","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze coverage patterns in annotations — analyze_coverage","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 20),   end = c(3, 8, 25),   code = c(\"code1\", \"code2\", \"code1\") ) results <- analyze_coverage(annotations) } # }  if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 20),   end = c(3, 8, 25),   code = c(\"code1\", \"code2\", \"code1\") ) results <- analyze_coverage(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_memo_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze memo usage patterns — analyze_memo_patterns","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"Examines memos used codes analyzing memo frequency, content, patterns memo application across code instances. Examines memos used codes analyzing memo frequency, content, patterns memo application across code instances.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_memo_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"","code":"analyze_memo_patterns(code_anns)  analyze_memo_patterns(code_anns)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_memo_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"code_anns Data frame containing code annotations columns: memo: character, memo text associated annotation code: character, code identifier","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_memo_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"List containing: memo_frequency: Proportion annotations memos has_memos: Logical vector indicating memo presence List containing: memo_frequency: Proportion annotations memos has_memos: Logical vector indicating memo presence","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_memo_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze memo usage patterns — analyze_memo_patterns","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   code = c(\"code1\", \"code1\", \"code2\"),   memo = c(\"note 1\", \"\", \"note 2\") ) patterns <- analyze_memo_patterns(annotations) } # } if (FALSE) { # \\dontrun{ annotations <- data.frame(   code = c(\"code1\", \"code1\", \"code2\"),   memo = c(\"note 1\", \"\", \"note 2\") ) patterns <- analyze_memo_patterns(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze sequences and transitions between codes — analyze_sequences","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"Analyzes codes sequenced text examining transitions consecutive codes identifying repeated patterns. Analyzes codes sequenced text examining transitions consecutive codes identifying repeated patterns.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"","code":"analyze_sequences(annotations)  analyze_sequences(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"annotations Data frame text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"List containing: transitions: List transitions consecutive codes patterns: List identified repeated code sequences List containing: transitions: List transitions consecutive codes patterns: List identified repeated code sequences","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/analyze_sequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze sequences and transitions between codes — analyze_sequences","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 10, 20),   end = c(5, 15, 25),   code = c(\"code1\", \"code2\", \"code1\") ) results <- analyze_sequences(annotations) } # } if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 10, 20),   end = c(5, 15, 25),   code = c(\"code1\", \"code2\", \"code1\") ) results <- analyze_sequences(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/annotate_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Annotation GUI — annotate_gui","title":"Text Annotation GUI — annotate_gui","text":"Launch interactive Shiny application text annotation analysis. GUI provides tools importing text, applying codes, creating memos, analyzing annotations various visualizations.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/annotate_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text Annotation GUI — annotate_gui","text":"","code":"annotate_gui()"},{"path":"http://liu-chao.site/textAnnotatoR/reference/annotate_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text Annotation GUI — annotate_gui","text":"Launches Shiny application default web browser","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/annotate_gui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Text Annotation GUI — annotate_gui","text":"Interactive Text Annotation Interface annotation interface includes following features: Text import display Code application management Memo creation linking Project management (save/load) Annotation analysis tools Export capabilities","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/annotate_gui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Text Annotation GUI — annotate_gui","text":"package provides functionality users interactively save files Shiny interface. file operations explicitly initiated users file dialogs, files written automatically user's system without direct action consent.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/annotate_gui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text Annotation GUI — annotate_gui","text":"","code":"if (FALSE) { # \\dontrun{ annotate_gui() } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/apply_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply or reverse an action — apply_action","title":"Apply or reverse an action — apply_action","text":"Applies reverses action undo/redo system. Handles different types actions including adding/removing annotations merging/unmerging codes. Applies reverses action undo/redo system. Handles different types actions including adding/removing annotations merging/unmerging codes.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/apply_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply or reverse an action — apply_action","text":"","code":"apply_action(rv, action, reverse = FALSE)  apply_action(rv, action, reverse = FALSE)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/apply_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply or reverse an action — apply_action","text":"rv ReactiveValues object containing application state action List containing action information reverse Logical indicating whether reverse action","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/apply_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply or reverse an action — apply_action","text":"Invisible rv (ReactiveValues object) Invisible rv (ReactiveValues object)","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/apply_action.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply or reverse an action — apply_action","text":"","code":"if (FALSE) { # \\dontrun{ # Create and apply an action action <- create_action(   type = \"add_annotation\",   data = list(start = 1, end = 10, code = \"code1\") ) apply_action(rv, action)  # Reverse the action apply_action(rv, action, reverse = TRUE) } # }  if (FALSE) { # \\dontrun{ # Create and apply an action action <- create_action(   type = \"add_annotation\",   data = list(start = 1, end = 10, code = \"code1\") ) apply_action(rv, action)  # Reverse the action apply_action(rv, action, reverse = TRUE) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_co_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate co-occurrences — calculate_co_occurrences","title":"Helper function to calculate co-occurrences — calculate_co_occurrences","text":"Helper function calculate co-occurrences","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_co_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate co-occurrences — calculate_co_occurrences","text":"","code":"calculate_co_occurrences(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_co_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate co-occurrences — calculate_co_occurrences","text":"annotations Data frame annotations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_co_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to calculate co-occurrences — calculate_co_occurrences","text":"Table co-occurrence frequencies","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_hierarchy_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hierarchy statistics — calculate_hierarchy_stats","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"Calculates various statistics code hierarchy including total number themes codes, maximum depth, distribution codes across themes. Calculates various statistics code hierarchy including total number themes codes, maximum depth, distribution codes across themes.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_hierarchy_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"","code":"calculate_hierarchy_stats(node)  calculate_hierarchy_stats(node)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_hierarchy_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"node Root node hierarchy tree","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_hierarchy_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"list containing hierarchy statistics: total_themes: Total number themes hierarchy total_codes: Total number codes hierarchy max_depth: Maximum depth hierarchy tree codes_per_theme: List showing number codes theme average_codes_per_theme: Average number codes per theme list containing hierarchy statistics: total_themes: Total number themes hierarchy total_codes: Total number codes hierarchy max_depth: Maximum depth hierarchy tree codes_per_theme: List showing number codes theme average_codes_per_theme: Average number codes per theme","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_hierarchy_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate hierarchy statistics — calculate_hierarchy_stats","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$AddChild(\"Code1\") theme1$AddChild(\"Code2\")  # Calculate statistics stats <- calculate_hierarchy_stats(root) print(stats$total_codes)  # Should print 2 } # }  if (FALSE) { # \\dontrun{ # Create sample hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$AddChild(\"Code1\") theme1$AddChild(\"Code2\")  # Calculate statistics stats <- calculate_hierarchy_stats(root) print(stats$total_codes)  # Should print 2 } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_transitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate transitions — calculate_transitions","title":"Helper function to calculate transitions — calculate_transitions","text":"Helper function calculate transitions","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_transitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate transitions — calculate_transitions","text":"","code":"calculate_transitions(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_transitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate transitions — calculate_transitions","text":"annotations Data frame annotations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/calculate_transitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to calculate transitions — calculate_transitions","text":"List transitions","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_export_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean directory paths for export — clean_export_path","title":"Clean directory paths for export — clean_export_path","text":"Sanitizes directory paths file export operations. function ensures export paths valid, accessible, secure files written. handles path normalization security checks export operations.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_export_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean directory paths for export — clean_export_path","text":"","code":"clean_export_path(dir_path, create = FALSE)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_export_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean directory paths for export — clean_export_path","text":"dir_path Character string containing directory path clean create Logical indicating whether create directory exist","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_export_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean directory paths for export — clean_export_path","text":"Cleaned validated directory path","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_export_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean directory paths for export — clean_export_path","text":"","code":"if (FALSE) { # \\dontrun{ # Clean export path export_path <- clean_export_path(\"my/export/path\")  # Clean and create directory if needed export_path <- clean_export_path(\"my/export/path\", create = TRUE) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_project_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean project path — clean_project_path","title":"Clean project path — clean_project_path","text":"Ensures project paths valid secure removing potentially harmful characters preventing directory traversal attempts. function sanitizes file paths prevent security issues ensure consistent file naming across different operating systems.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_project_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean project path — clean_project_path","text":"","code":"clean_project_path(path)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_project_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean project path — clean_project_path","text":"path Character string containing project path cleaned","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_project_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean project path — clean_project_path","text":"Sanitized path string safe use file operations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/clean_project_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean project path — clean_project_path","text":"","code":"if (FALSE) { # \\dontrun{ # Clean a simple filename clean_project_path(\"my_project.rds\")  # Clean a path with special characters clean_project_path(\"my@project#2023.rds\")  # Clean a path with directory traversal attempt clean_project_path(\"../dangerous/path/project.rds\")  # Clean a path with spaces and special characters clean_project_path(\"My Project 2023!.rds\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_co_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code co-occurrence patterns between coders — compare_co_occurrences","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"Analyzes different coders overlap code applications comparing frequency patterns code co-occurrences. Analyzes different coders overlap code applications comparing frequency patterns code co-occurrences.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_co_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"","code":"compare_co_occurrences(overlaps_list)  compare_co_occurrences(overlaps_list)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_co_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"overlaps_list List overlap patterns different coders, entry contains: combinations: List containing frequency table code co-occurrences","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_co_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"List containing: overlap_variation: Numeric value indicating range overlap counts summary: Character string describing variation overlapping pairs List containing: overlap_variation: Numeric value indicating range overlap counts summary: Character string describing variation overlapping pairs","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_co_occurrences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare code co-occurrence patterns between coders — compare_co_occurrences","text":"","code":"if (FALSE) { # \\dontrun{ overlaps1 <- list(combinations = list(frequencies = c(\"A-B\" = 2))) overlaps2 <- list(combinations = list(frequencies = c(\"A-B\" = 1, \"B-C\" = 3))) results <- compare_co_occurrences(list(overlaps1, overlaps2)) } # } if (FALSE) { # \\dontrun{ overlaps1 <- list(combinations = list(frequencies = c(\"A-B\" = 2))) overlaps2 <- list(combinations = list(frequencies = c(\"A-B\" = 1, \"B-C\" = 3))) results <- compare_co_occurrences(list(overlaps1, overlaps2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_code_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code application patterns between coders — compare_code_patterns","title":"Compare code application patterns between coders — compare_code_patterns","text":"Analyzes compares different coders apply codes examining code segment lengths memo usage patterns across coding strategies. Analyzes compares different coders apply codes examining code segment lengths memo usage patterns across coding strategies.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_code_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code application patterns between coders — compare_code_patterns","text":"","code":"compare_code_patterns(patterns_list)  compare_code_patterns(patterns_list)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_code_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code application patterns between coders — compare_code_patterns","text":"patterns_list List coding patterns different coders, pattern contains: typical_length: numeric, average length code segments memo_patterns: list containing memo usage statistics","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_code_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code application patterns between coders — compare_code_patterns","text":"List containing: length_variation: Character string describing variation code segment lengths memo_usage_summary: Character string describing differences memo usage List containing: length_variation: Character string describing variation code segment lengths memo_usage_summary: Character string describing differences memo usage","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_code_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare code application patterns between coders — compare_code_patterns","text":"","code":"if (FALSE) { # \\dontrun{ patterns1 <- list(   code1 = list(typical_length = 10,                memo_patterns = list(memo_frequency = 0.5)) ) patterns2 <- list(   code1 = list(typical_length = 15,                memo_patterns = list(memo_frequency = 0.3)) ) results <- compare_code_patterns(list(patterns1, patterns2)) } # } if (FALSE) { # \\dontrun{ patterns1 <- list(   code1 = list(typical_length = 10,                memo_patterns = list(memo_frequency = 0.5)) ) patterns2 <- list(   code1 = list(typical_length = 15,                memo_patterns = list(memo_frequency = 0.3)) ) results <- compare_code_patterns(list(patterns1, patterns2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code usage between coders — compare_codes","title":"Compare code usage between coders — compare_codes","text":"Compares different coders use codes analyzing shared codes usage patterns across coding strategies. Compares different coders use codes analyzing shared codes usage patterns across coding strategies.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code usage between coders — compare_codes","text":"","code":"compare_codes(coding_strategies)  compare_codes(coding_strategies)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code usage between coders — compare_codes","text":"coding_strategies List coding strategies, strategy contains code frequency information","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code usage between coders — compare_codes","text":"List containing: shared_codes: Character vector codes used across strategies usage_matrix: Matrix showing code usage across strategies List containing: shared_codes: Character vector codes used across strategies usage_matrix: Matrix showing code usage across strategies","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare code usage between coders — compare_codes","text":"","code":"if (FALSE) { # \\dontrun{ strategy1 <- list(   coverage = list(     distribution = list(       frequencies = c(code1 = 2, code2 = 1)     )   ) ) strategy2 <- list(   coverage = list(     distribution = list(       frequencies = c(code2 = 2, code3 = 1)     )   ) ) comparison <- compare_codes(list(strategy1, strategy2)) } # }  if (FALSE) { # \\dontrun{ strategy1 <- list(   coverage = list(     distribution = list(       frequencies = c(code1 = 2, code2 = 1)     )   ) ) strategy2 <- list(   coverage = list(     distribution = list(       frequencies = c(code2 = 2, code3 = 1)     )   ) ) comparison <- compare_codes(list(strategy1, strategy2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coverage patterns between coding strategies — compare_coverage","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"Analyzes compares coverage patterns different coding strategies, including total codes used unique code counts. Analyzes compares coverage patterns different coding strategies, including total codes used unique code counts.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"","code":"compare_coverage(coding_strategies)  compare_coverage(coding_strategies)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"coding_strategies List coding strategies, strategy contains: coverage: List containing distribution information frequencies: Table code frequencies","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"List containing: total_codes_range: Numeric vector min max total codes unique_codes_range: Numeric vector min max unique codes List containing: total_codes_range: Numeric vector min max total codes unique_codes_range: Numeric vector min max unique codes","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare coverage patterns between coding strategies — compare_coverage","text":"","code":"if (FALSE) { # \\dontrun{ strategy1 <- list(   coverage = list(     distribution = list(       frequencies = table(c(\"code1\", \"code1\", \"code2\"))     )   ) ) strategy2 <- list(   coverage = list(     distribution = list(       frequencies = table(c(\"code2\", \"code3\", \"code3\"))     )   ) ) results <- compare_coverage(list(strategy1, strategy2)) } # }  if (FALSE) { # \\dontrun{ strategy1 <- list(   coverage = list(     distribution = list(       frequencies = table(c(\"code1\", \"code1\", \"code2\"))     )   ) ) strategy2 <- list(   coverage = list(     distribution = list(       frequencies = table(c(\"code2\", \"code3\", \"code3\"))     )   ) ) results <- compare_coverage(list(strategy1, strategy2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_overlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare overlap patterns between coders — compare_overlaps","title":"Compare overlap patterns between coders — compare_overlaps","text":"Analyzes different coders overlap code applications comparing overlap patterns frequencies across coding strategies. Analyzes different coders overlap code applications comparing overlap patterns frequencies across coding strategies.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_overlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare overlap patterns between coders — compare_overlaps","text":"","code":"compare_overlaps(coding_strategies)  compare_overlaps(coding_strategies)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_overlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare overlap patterns between coders — compare_overlaps","text":"coding_strategies List coding strategies, strategy contains overlap information","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_overlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare overlap patterns between coders — compare_overlaps","text":"List containing: total_overlaps_range: Range total overlaps across strategies unique_pairs_range: Range unique code pairs across strategies List containing: total_overlaps_range: Range total overlaps across strategies unique_pairs_range: Range unique code pairs across strategies","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_overlaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare overlap patterns between coders — compare_overlaps","text":"","code":"if (FALSE) { # \\dontrun{ strategy1 <- list(   co_occurrences = list(     combinations = list(       frequencies = c(\"code1-code2\" = 2)     )   ) ) strategy2 <- list(   co_occurrences = list(     combinations = list(       frequencies = c(\"code2-code3\" = 1)     )   ) ) results <- compare_overlaps(list(strategy1, strategy2)) } # }  if (FALSE) { # \\dontrun{ strategy1 <- list(   co_occurrences = list(     combinations = list(       frequencies = c(\"code1-code2\" = 2)     )   ) ) strategy2 <- list(   co_occurrences = list(     combinations = list(       frequencies = c(\"code2-code3\" = 1)     )   ) ) results <- compare_overlaps(list(strategy1, strategy2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coding patterns between different coders — compare_patterns","title":"Compare coding patterns between different coders — compare_patterns","text":"Compare coding patterns different coders","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coding patterns between different coders — compare_patterns","text":"","code":"compare_patterns(coding_strategies)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare code sequence patterns between coders — compare_sequences","title":"Compare code sequence patterns between coders — compare_sequences","text":"Analyzes different coders sequence codes comparing patterns frequency code transitions. Analyzes different coders sequence codes comparing patterns frequency code transitions.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare code sequence patterns between coders — compare_sequences","text":"","code":"compare_sequences(sequences_list)  compare_sequences(sequences_list)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare code sequence patterns between coders — compare_sequences","text":"sequences_list List sequence patterns different coders, entry contains: transitions: List code transitions observed text","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare code sequence patterns between coders — compare_sequences","text":"List containing: sequence_variation: Numeric value indicating range transition counts summary: Character string describing variation code transitions List containing: sequence_variation: Numeric value indicating range transition counts summary: Character string describing variation code transitions","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/compare_sequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare code sequence patterns between coders — compare_sequences","text":"","code":"if (FALSE) { # \\dontrun{ seq1 <- list(transitions = list(c(\"A\", \"B\"), c(\"B\", \"C\"))) seq2 <- list(transitions = list(c(\"A\", \"B\"))) results <- compare_sequences(list(seq1, seq2)) } # } if (FALSE) { # \\dontrun{ seq1 <- list(transitions = list(c(\"A\", \"B\"), c(\"B\", \"C\"))) seq2 <- list(transitions = list(c(\"A\", \"B\"))) results <- compare_sequences(list(seq1, seq2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/concatenate_memos.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate memo texts — concatenate_memos","title":"Concatenate memo texts — concatenate_memos","text":"Combines existing new memo texts proper separators, handling empty memos appropriately. Combines existing new memo texts proper separators, handling empty memos appropriately.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/concatenate_memos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate memo texts — concatenate_memos","text":"","code":"concatenate_memos(existing_memo, new_memo)  concatenate_memos(existing_memo, new_memo)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/concatenate_memos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate memo texts — concatenate_memos","text":"existing_memo Character string containing current memo text new_memo Character string containing memo text append","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/concatenate_memos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate memo texts — concatenate_memos","text":"Character string combined memo text Character string combined memo text","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/concatenate_memos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate memo texts — concatenate_memos","text":"","code":"if (FALSE) { # \\dontrun{ # Combine non-empty memos concatenate_memos(\"First note\", \"Second note\") # Returns: \"First note; Second note\"  # Handle empty existing memo concatenate_memos(\"\", \"New note\") # Returns: \"New note\" } # } if (FALSE) { # \\dontrun{ # Combine non-empty memos concatenate_memos(\"First note\", \"Second note\") # Returns: \"First note; Second note\"  # Handle empty existing memo concatenate_memos(\"\", \"New note\") # Returns: \"New note\" } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and manage undo/redo action — create_action","title":"Create and manage undo/redo action — create_action","text":"Creates action object undo/redo system, containing information type action, data involved, reverse action. Creates action object undo/redo system, containing information type action, data involved, reverse action.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and manage undo/redo action — create_action","text":"","code":"create_action(type, data, reverse_data = NULL)  create_action(type, data, reverse_data = NULL)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and manage undo/redo action — create_action","text":"type Character string specifying type action data List containing action data reverse_data Optional list containing data reversing action","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and manage undo/redo action — create_action","text":"List containing: type: Action type identifier data: Action data reverse_data: Data reversing action timestamp: Time action created List containing: type: Action type identifier data: Action data reverse_data: Data reversing action timestamp: Time action created","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_action.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and manage undo/redo action — create_action","text":"","code":"if (FALSE) { # \\dontrun{ # Create an add annotation action action <- create_action(   type = \"add_annotation\",   data = list(     start = 1,     end = 10,     code = \"important\"   ) )  # Create a merge codes action merge_action <- create_action(   type = \"merge_codes\",   data = list(     old_codes = c(\"code1\", \"code2\"),     new_code = \"merged_code\"   ) ) } # }  if (FALSE) { # \\dontrun{ # Create an add annotation action action <- create_action(   type = \"add_annotation\",   data = list(     start = 1,     end = 10,     code = \"important\"   ) )  # Create a merge codes action merge_action <- create_action(   type = \"merge_codes\",   data = list(     old_codes = c(\"code1\", \"code2\"),     new_code = \"merged_code\"   ) ) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_backup_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create backup directory — create_backup_dir","title":"Create backup directory — create_backup_dir","text":"Creates manages backup directory project files. function ensures automatic backups designated storage location properly managed cleaned needed.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_backup_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create backup directory — create_backup_dir","text":"","code":"create_backup_dir(max_backups = 3)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_backup_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create backup directory — create_backup_dir","text":"max_backups Integer specifying maximum number backups keep","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_backup_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create backup directory — create_backup_dir","text":"Character string containing path backup directory","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_backup_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create backup directory — create_backup_dir","text":"","code":"if (FALSE) { # \\dontrun{ # Create backup directory with default settings backup_dir <- create_backup_dir()  # Create backup directory with custom maximum backup_dir <- create_backup_dir(max_backups = 5)  # Check backup directory contents list.files(backup_dir) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_new_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize new project — create_new_project","title":"Initialize new project — create_new_project","text":"Creates new project resetting reactive values defaults clearing UI elements. Creates new project resetting reactive values defaults clearing UI elements.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_new_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize new project — create_new_project","text":"","code":"create_new_project(rv, session)  create_new_project(rv, session)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_new_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize new project — create_new_project","text":"rv ReactiveValues object reset containing: text: Text content annotations: Annotation data frame codes: Vector codes code_tree: Hierarchy Node object project state values session Shiny session object","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_new_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize new project — create_new_project","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_new_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize new project — create_new_project","text":"","code":"if (FALSE) { # \\dontrun{ # In Shiny server: observeEvent(input$new_project, {   create_new_project(rv, session) }) } # } if (FALSE) { # \\dontrun{ # In Shiny server: observeEvent(input$new_project, {   create_new_project(rv, session) }) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_plain_text_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plain text version of annotations — create_plain_text_annotations","title":"Create plain text version of annotations — create_plain_text_annotations","text":"Converts annotated text plain text format code markers. annotation represented code identifier annotated text wrapped square brackets. Multiple annotations preserved shown order appearance text. Converts annotated text plain text format code markers. annotation represented code identifier annotated text wrapped square brackets. Multiple annotations preserved shown order appearance text.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_plain_text_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plain text version of annotations — create_plain_text_annotations","text":"","code":"create_plain_text_annotations(text, annotations)  create_plain_text_annotations(text, annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_plain_text_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plain text version of annotations — create_plain_text_annotations","text":"text Character string containing original text annotations Data frame annotations columns: start: Numeric vector starting positions end: Numeric vector ending positions code: Character vector code names","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_plain_text_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plain text version of annotations — create_plain_text_annotations","text":"Character string containing formatted text code markers Character string containing formatted text code markers","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/create_plain_text_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create plain text version of annotations — create_plain_text_annotations","text":"","code":"if (FALSE) { # \\dontrun{ # Simple example with one annotation text <- \"This is a sample text\" annotations <- data.frame(   start = 1,   end = 4,   code = \"code1\",   stringsAsFactors = FALSE ) result <- create_plain_text_annotations(text, annotations) # Result will be: \"[code1: This] is a sample text\"  # Example with multiple annotations text <- \"The quick brown fox\" annotations <- data.frame(   start = c(1, 10),   end = c(3, 15),   code = c(\"article\", \"adjective\"),   stringsAsFactors = FALSE ) result <- create_plain_text_annotations(text, annotations) # Result will be: \"[article: The] quick [adjective: brown fox]\" } # }  if (FALSE) { # \\dontrun{ # Simple example with one annotation text <- \"This is a sample text\" annotations <- data.frame(   start = 1,   end = 4,   code = \"code1\",   stringsAsFactors = FALSE ) result <- create_plain_text_annotations(text, annotations) # Result will be: \"[code1: This] is a sample text\"  # Example with multiple annotations text <- \"The quick brown fox\" annotations <- data.frame(   start = c(1, 10),   end = c(3, 15),   code = c(\"article\", \"adjective\"),   stringsAsFactors = FALSE ) result <- create_plain_text_annotations(text, annotations) # Result will be: \"[article: The] quick [adjective: brown fox]\" } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/export_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Export code hierarchy to JSON format — export_hierarchy","title":"Export code hierarchy to JSON format — export_hierarchy","text":"Converts code hierarchy tree structure JSON string representation can saved transmitted preserving node properties relationships. Converts code hierarchy tree structure JSON string representation can saved transmitted preserving node properties relationships.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/export_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export code hierarchy to JSON format — export_hierarchy","text":"","code":"export_hierarchy(node)  export_hierarchy(node)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/export_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export code hierarchy to JSON format — export_hierarchy","text":"node Root node hierarchy tree","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/export_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export code hierarchy to JSON format — export_hierarchy","text":"JSON string representation hierarchy JSON string representation hierarchy","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/export_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export code hierarchy to JSON format — export_hierarchy","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$AddChild(\"Code1\")  # Export to JSON json_string <- export_hierarchy(root) writeLines(json_string, \"hierarchy.json\") } # }  if (FALSE) { # \\dontrun{ # Create sample hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$AddChild(\"Code1\")  # Export to JSON json_string <- export_hierarchy(root) writeLines(json_string, \"hierarchy.json\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_annotation_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Find clusters of annotations in text — find_annotation_clusters","title":"Find clusters of annotations in text — find_annotation_clusters","text":"Identifies clusters annotations close together text, helping identify dense coding regions. Identifies clusters annotations close together text, helping identify dense coding regions.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_annotation_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find clusters of annotations in text — find_annotation_clusters","text":"","code":"find_annotation_clusters(annotations)  find_annotation_clusters(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_annotation_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find clusters of annotations in text — find_annotation_clusters","text":"annotations Data frame containing sorted text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_annotation_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find clusters of annotations in text — find_annotation_clusters","text":"List annotation clusters, cluster contains annotations within specified distance List annotation clusters, cluster contains annotations within specified distance ","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_annotation_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find clusters of annotations in text — find_annotation_clusters","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 100),   end = c(3, 8, 105),   code = c(\"code1\", \"code2\", \"code3\") ) clusters <- find_annotation_clusters(annotations) } # }  if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 100),   end = c(3, 8, 105),   code = c(\"code1\", \"code2\", \"code3\") ) clusters <- find_annotation_clusters(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_code_transitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find transitions between codes — find_code_transitions","title":"Find transitions between codes — find_code_transitions","text":"Identifies analyzes transitions consecutive code applications understand coding sequence patterns. Identifies analyzes transitions consecutive code applications understand coding sequence patterns.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_code_transitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find transitions between codes — find_code_transitions","text":"","code":"find_code_transitions(annotations)  find_code_transitions(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_code_transitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find transitions between codes — find_code_transitions","text":"annotations Data frame sorted annotations columns: start: numeric, starting position end: numeric, ending position code: character, code identifier","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_code_transitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find transitions between codes — find_code_transitions","text":"List code transitions, containing: : Source code : Target code List code transitions, containing: : Source code : Target code","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_code_transitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find transitions between codes — find_code_transitions","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 10, 20),   end = c(5, 15, 25),   code = c(\"code1\", \"code2\", \"code3\") ) transitions <- find_code_transitions(annotations) } # } if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 10, 20),   end = c(5, 15, 25),   code = c(\"code1\", \"code2\", \"code3\") ) transitions <- find_code_transitions(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_overlapping_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find overlapping code annotations — find_overlapping_codes","title":"Find overlapping code annotations — find_overlapping_codes","text":"Identifies pairs annotations overlap text returns intersection points associated codes. Identifies pairs annotations overlap text returns intersection points associated codes.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_overlapping_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find overlapping code annotations — find_overlapping_codes","text":"","code":"find_overlapping_codes(annotations)  find_overlapping_codes(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_overlapping_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find overlapping code annotations — find_overlapping_codes","text":"annotations data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_overlapping_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find overlapping code annotations — find_overlapping_codes","text":"list overlapping code pairs, containing: code1: first code overlap code2: second code overlap overlap_start: starting position overlap overlap_end: ending position overlap list overlapping code pairs, containing: code1: first code overlap code2: second code overlap overlap_start: starting position overlap overlap_end: ending position overlap","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_overlapping_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find overlapping code annotations — find_overlapping_codes","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 10),   end = c(8, 15, 20),   code = c(\"code1\", \"code2\", \"code1\") ) overlaps <- find_overlapping_codes(annotations) } # } if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 10),   end = c(8, 15, 20),   code = c(\"code1\", \"code2\", \"code1\") ) overlaps <- find_overlapping_codes(annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_repeated_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Find repeated patterns in code sequences — find_repeated_sequences","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"Identifies repeating patterns 2-3 codes sequence uncover recurring coding structures. Identifies repeating patterns 2-3 codes sequence uncover recurring coding structures.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_repeated_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"","code":"find_repeated_sequences(annotations)  find_repeated_sequences(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_repeated_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"annotations Data frame sorted annotations columns: code: character, code identifier","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_repeated_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"Named list pattern frequencies : names: Code patterns (e.g. \"code1-code2\") values: Number occurrences Named list pattern frequencies : names: Code patterns (e.g. \"code1-code2\") values: Number occurrences","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/find_repeated_sequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find repeated patterns in code sequences — find_repeated_sequences","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   code = c(\"A\", \"B\", \"A\", \"B\", \"C\") ) patterns <- find_repeated_sequences(annotations) # Returns list showing A-B pattern occurs twice } # } if (FALSE) { # \\dontrun{ annotations <- data.frame(   code = c(\"A\", \"B\", \"A\", \"B\", \"C\") ) patterns <- find_repeated_sequences(annotations) # Returns list showing A-B pattern occurs twice } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_code_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format code difference analysis results — format_code_differences","title":"Format code difference analysis results — format_code_differences","text":"Formats results code difference analysis human-readable string, handling character list inputs appropriately.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_code_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format code difference analysis results — format_code_differences","text":"","code":"format_code_differences(differences)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_code_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format code difference analysis results — format_code_differences","text":"differences Either character string containing direct analysis results list containing: pattern_summary: Character string summarizing code pattern differences","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_code_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format code difference analysis results — format_code_differences","text":"Character string containing formatted code analysis results","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_code_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format code difference analysis results — format_code_differences","text":"","code":"if (FALSE) { # \\dontrun{ # With character input format_code_differences(\"Direct analysis result\")  # With list input differences <- list(pattern_summary = \"Analyzed 5 coding patterns\") format_code_differences(differences) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_coverage_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format coverage difference analysis results — format_coverage_differences","title":"Format coverage difference analysis results — format_coverage_differences","text":"Formats results coverage difference analysis human-readable string, handling character list inputs appropriately.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_coverage_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format coverage difference analysis results — format_coverage_differences","text":"","code":"format_coverage_differences(differences)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_coverage_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format coverage difference analysis results — format_coverage_differences","text":"differences Either character string containing direct analysis results list containing: density_summary: Character string summarizing density differences","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_coverage_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format coverage difference analysis results — format_coverage_differences","text":"Character string containing formatted coverage analysis results","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_coverage_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format coverage difference analysis results — format_coverage_differences","text":"","code":"if (FALSE) { # \\dontrun{ # With character input format_coverage_differences(\"Direct analysis result\")  # With list input differences <- list(density_summary = \"Coverage density varies from 0.2 to 0.8\") format_coverage_differences(differences) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_overlap_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format overlap difference analysis results — format_overlap_differences","title":"Format overlap difference analysis results — format_overlap_differences","text":"Formats results overlap difference analysis human-readable string, processing character complex input types.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_overlap_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format overlap difference analysis results — format_overlap_differences","text":"","code":"format_overlap_differences(differences)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_overlap_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format overlap difference analysis results — format_overlap_differences","text":"differences Either character string containing direct analysis results complex analysis object","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_overlap_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format overlap difference analysis results — format_overlap_differences","text":"Character string containing formatted overlap analysis results","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_overlap_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format overlap difference analysis results — format_overlap_differences","text":"","code":"if (FALSE) { # \\dontrun{ # With character input format_overlap_differences(\"Direct analysis result\")  # With complex input format_overlap_differences(list(some_results = \"data\")) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_sequence_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Format sequence difference analysis results — format_sequence_differences","title":"Format sequence difference analysis results — format_sequence_differences","text":"Formats results sequence difference analysis human-readable string, processing character complex input types.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_sequence_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format sequence difference analysis results — format_sequence_differences","text":"","code":"format_sequence_differences(differences)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_sequence_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format sequence difference analysis results — format_sequence_differences","text":"differences Either character string containing direct analysis results complex analysis object","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_sequence_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format sequence difference analysis results — format_sequence_differences","text":"Character string containing formatted sequence analysis results","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/format_sequence_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format sequence difference analysis results — format_sequence_differences","text":"","code":"if (FALSE) { # \\dontrun{ # With character input format_sequence_differences(\"Direct analysis result\")  # With complex input format_sequence_differences(list(some_results = \"data\")) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_co_occurrence_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"Performs comprehensive analysis code co-occurrences text, including calculation various similarity metrics generation network heatmap visualizations. Performs comprehensive analysis code co-occurrences text, including calculation various similarity metrics generation network heatmap visualizations.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_co_occurrence_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"","code":"generate_code_co_occurrence_analysis(annotations)  generate_code_co_occurrence_analysis(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_co_occurrence_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"annotations Data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_co_occurrence_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"List containing: co_occurrence: Matrix raw co-occurrence counts jaccard_similarity: Matrix Jaccard similarity coefficients phi_coefficient: Matrix Phi coefficients network_plot: Network visualization code relationships heatmap_plot: Heatmap visualization code co-occurrences summary: List summary statistics List containing: co_occurrence: Matrix raw co-occurrence counts jaccard_similarity: Matrix Jaccard similarity coefficients phi_coefficient: Matrix Phi coefficients network_plot: Network visualization code relationships heatmap_plot: Heatmap visualization code co-occurrences summary: List summary statistics","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_co_occurrence_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate code co-occurrence statistics and visualization — generate_code_co_occurrence_analysis","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 10),   end = c(8, 15, 20),   code = c(\"code1\", \"code2\", \"code1\") ) results <- generate_code_co_occurrence_analysis(annotations) print(results$summary) } # }  if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 5, 10),   end = c(8, 15, 20),   code = c(\"code1\", \"code2\", \"code1\") ) results <- generate_code_co_occurrence_analysis(annotations) print(results$summary) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_frequency_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate code frequency visualization — generate_code_frequency_plot","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"Creates barplot visualization showing frequency code annotations. plot displays codes x-axis frequency counts y-axis. Creates barplot visualization showing frequency code annotations. plot displays codes x-axis frequency counts y-axis.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_frequency_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"","code":"generate_code_frequency_plot(annotations)  generate_code_frequency_plot(annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_frequency_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"annotations Data frame containing text annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_frequency_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"recordedplot object containing code frequency visualization recordedplot object containing code frequency visualization","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_code_frequency_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate code frequency visualization — generate_code_frequency_plot","text":"","code":"if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 10, 20),   end = c(5, 15, 25),   code = c(\"code1\", \"code2\", \"code1\") ) plot <- generate_code_frequency_plot(annotations) print(plot) } # }  if (FALSE) { # \\dontrun{ annotations <- data.frame(   start = c(1, 10, 20),   end = c(5, 15, 25),   code = c(\"code1\", \"code2\", \"code1\") ) plot <- generate_code_frequency_plot(annotations) print(plot) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coding patterns between different documents or coders — generate_comparison_analysis","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"Performs comprehensive comparison coding patterns different sets annotations, analyzing differences coverage, code application, overlaps, code sequences. Performs comprehensive comparison coding patterns different sets annotations, analyzing differences coverage, code application, overlaps, code sequences.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"","code":"generate_comparison_analysis(annotations_list)  generate_comparison_analysis(annotations_list)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"annotations_list list data frames, data frame contains annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"list containing comparison results analysis: coding_strategies: list analyzed coding patterns input comparison: list comparative analyses coding patterns list containing comparison results analysis: coding_strategies: list analyzed coding patterns input comparison: list comparative analyses coding patterns","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare coding patterns between different documents or coders — generate_comparison_analysis","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample annotation sets annotations1 <- data.frame(   start = c(1, 10),   end = c(5, 15),   code = c(\"code1\", \"code2\") ) annotations2 <- data.frame(   start = c(2, 12),   end = c(6, 18),   code = c(\"code1\", \"code3\") ) results <- generate_comparison_analysis(list(annotations1, annotations2)) } # } if (FALSE) { # \\dontrun{ # Create sample annotation sets annotations1 <- data.frame(   start = c(1, 10),   end = c(5, 15),   code = c(\"code1\", \"code2\") ) annotations2 <- data.frame(   start = c(2, 12),   end = c(6, 18),   code = c(\"code1\", \"code3\") ) results <- generate_comparison_analysis(list(annotations1, annotations2)) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate comparison visualizations — generate_comparison_plots","title":"Generate comparison visualizations — generate_comparison_plots","text":"Creates set visualizations comparing coding patterns different coders, including distribution comparisons, overlap patterns, sequence patterns. Creates set visualizations comparing coding patterns different coders, including distribution comparisons, overlap patterns, sequence patterns.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate comparison visualizations — generate_comparison_plots","text":"","code":"generate_comparison_plots(comparison_results)  generate_comparison_plots(comparison_results)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate comparison visualizations — generate_comparison_plots","text":"comparison_results List containing results generate_comparison_analysis: coding_strategies: List analyzed coding patterns comparison: List comparative analyses","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate comparison visualizations — generate_comparison_plots","text":"List containing plot objects: distribution: Plot comparing code distribution patterns overlap: Plot showing code overlap patterns sequence: Plot displaying code sequence patterns List containing plot objects: distribution: Plot comparing code distribution patterns overlap: Plot showing code overlap patterns sequence: Plot displaying code sequence patterns","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_comparison_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate comparison visualizations — generate_comparison_plots","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample comparison results results <- generate_comparison_analysis(list(   annotations1 = data.frame(start = c(1, 5), end = c(3, 8), code = c(\"A\", \"B\")),   annotations2 = data.frame(start = c(2, 6), end = c(4, 9), code = c(\"A\", \"C\")) ))  # Generate visualizations plots <- generate_comparison_plots(results) print(plots$distribution) } # }  if (FALSE) { # \\dontrun{ # Create sample comparison results results <- generate_comparison_analysis(list(   annotations1 = data.frame(start = c(1, 5), end = c(3, 8), code = c(\"A\", \"B\")),   annotations2 = data.frame(start = c(2, 6), end = c(4, 9), code = c(\"A\", \"C\")) ))  # Generate visualizations plots <- generate_comparison_plots(results) print(plots$distribution) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_text_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text summary statistics — generate_text_summary","title":"Generate text summary statistics — generate_text_summary","text":"Calculates basic summary statistics annotated text, including word counts, character counts, annotation counts, unique code counts. Calculates basic summary statistics annotated text, including word counts, character counts, annotation counts, unique code counts.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_text_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text summary statistics — generate_text_summary","text":"","code":"generate_text_summary(text, annotations)  generate_text_summary(text, annotations)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_text_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text summary statistics — generate_text_summary","text":"text Character string containing text analyzed annotations Data frame annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_text_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text summary statistics — generate_text_summary","text":"list containing summary statistics: total_words: total number words text total_characters: total number characters total_sentences: number sentences (approximated punctuation) total_paragraphs: number paragraphs (non-empty lines) total_annotations: number annotations unique_codes: number unique codes used list containing summary statistics: total_words: total number words text total_characters: total number characters total_sentences: number sentences (approximated punctuation) total_paragraphs: number paragraphs (non-empty lines) total_annotations: number annotations unique_codes: number unique codes used","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_text_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text summary statistics — generate_text_summary","text":"","code":"if (FALSE) { # \\dontrun{ text <- \"This is a sample text.\\nIt has two paragraphs.\" annotations <- data.frame(   start = c(1, 10),   end = c(4, 15),   code = c(\"code1\", \"code2\") ) summary <- generate_text_summary(text, annotations) } # } if (FALSE) { # \\dontrun{ text <- \"This is a sample text.\\nIt has two paragraphs.\" annotations <- data.frame(   start = c(1, 10),   end = c(4, 15),   code = c(\"code1\", \"code2\") ) summary <- generate_text_summary(text, annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_word_cloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate word cloud visualization — generate_word_cloud","title":"Generate word cloud visualization — generate_word_cloud","text":"Creates simple word cloud visualization input text, showing frequent words size proportional frequency. Creates simple word cloud visualization input text, showing frequent words size proportional frequency.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_word_cloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate word cloud visualization — generate_word_cloud","text":"","code":"generate_word_cloud(text)  generate_word_cloud(text)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_word_cloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate word cloud visualization — generate_word_cloud","text":"text Character string containing text visualize","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_word_cloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate word cloud visualization — generate_word_cloud","text":"plot object containing word cloud visualization plot object containing word cloud visualization","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/generate_word_cloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate word cloud visualization — generate_word_cloud","text":"","code":"if (FALSE) { # \\dontrun{ text <- \"This is a sample text with repeated words. Sample text for visualization.\" cloud <- generate_word_cloud(text) } # } if (FALSE) { # \\dontrun{ text <- \"This is a sample text with repeated words. Sample text for visualization.\" cloud <- generate_word_cloud(text) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_code_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all code names from hierarchy — get_code_names","title":"Get all code names from hierarchy — get_code_names","text":"Recursively extracts code names code hierarchy tree structure, traversing nodes collecting names. Recursively extracts code names code hierarchy tree structure, traversing nodes collecting names.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_code_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all code names from hierarchy — get_code_names","text":"","code":"get_code_names(node)  get_code_names(node)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_code_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all code names from hierarchy — get_code_names","text":"node Root node code hierarchy (data.tree Node object)","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_code_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all code names from hierarchy — get_code_names","text":"Character vector containing code names hierarchy Character vector containing code names hierarchy","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_code_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all code names from hierarchy — get_code_names","text":"","code":"if (FALSE) { # \\dontrun{ # Create a simple code hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$AddChild(\"Code1\") theme1$AddChild(\"Code2\")  # Get all code names codes <- get_code_names(root) print(codes)  # c(\"Root\", \"Theme1\", \"Code1\", \"Code2\") } # }  if (FALSE) { # \\dontrun{ # Create a simple code hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$AddChild(\"Code1\") theme1$AddChild(\"Code2\")  # Get all code names codes <- get_code_names(root) print(codes)  # c(\"Root\", \"Theme1\", \"Code1\", \"Code2\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_export_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get export directory — get_export_dir","title":"Get export directory — get_export_dir","text":"Returns path exports directory, creating necessary. directory used storing exported annotation data, visualizations, analysis results. function ensures directory exists accessible returning path.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_export_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get export directory — get_export_dir","text":"","code":"get_export_dir()"},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_export_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get export directory — get_export_dir","text":"Character string containing path exports directory","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_export_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get export directory — get_export_dir","text":"","code":"if (FALSE) { # \\dontrun{ # Get the exports directory path export_dir <- get_export_dir()  # Export some data write.csv(data.frame(x = 1:3, y = letters[1:3]),           file = file.path(export_dir, \"example_export.csv\"))  # Check exported files list.files(export_dir, pattern = \"\\\\.csv$\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_project_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get project directory path — get_project_dir","title":"Get project directory path — get_project_dir","text":"Retrieves creates project directory path project files stored. Creates directory exist. Returns path projects directory, creating necessary. directory used storing saved annotation projects. function ensures directory exists accessible returning path. Retrieves creates project directory path project files stored. Creates directory exist.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_project_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get project directory path — get_project_dir","text":"","code":"get_project_dir()  get_project_dir()  get_project_dir()"},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_project_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get project directory path — get_project_dir","text":"Character string containing project directory path, NULL creation fails Character string containing path projects directory Character string containing project directory path, NULL creation fails","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/get_project_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get project directory path — get_project_dir","text":"","code":"if (FALSE) { # \\dontrun{ # Get project directory project_dir <- get_project_dir()  # Check if directory exists if (!is.null(project_dir)) {   list.files(project_dir) } } # }  if (FALSE) { # \\dontrun{ # Get the projects directory path project_dir <- get_project_dir()  # Save a project file saveRDS(list(data = \"example\"),         file = file.path(project_dir, \"example_project.rds\"))  # List project files list.files(project_dir, pattern = \"\\\\.rds$\") } # } if (FALSE) { # \\dontrun{ # Get project directory project_dir <- get_project_dir()  # Check if directory exists if (!is.null(project_dir)) {   list.files(project_dir) } } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/grapes-or-or-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Null coalescing operator — grapes-or-or-grapes","title":"Null coalescing operator — grapes-or-or-grapes","text":"Provides null coalescing functionality, returning first non-NULL argument Provides null coalescing functionality, returning first non-NULL argument","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/grapes-or-or-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null coalescing operator — grapes-or-or-grapes","text":"","code":"a %||% b  a %||% b"},{"path":"http://liu-chao.site/textAnnotatoR/reference/grapes-or-or-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Null coalescing operator — grapes-or-or-grapes","text":"First value check b Second value (default) use first NULL","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/grapes-or-or-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Null coalescing operator — grapes-or-or-grapes","text":"Returns NULL, otherwise returns b Returns NULL, otherwise returns b","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/grapes-or-or-grapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Null coalescing operator — grapes-or-or-grapes","text":"\\ \\","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/grapes-or-or-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Null coalescing operator — grapes-or-or-grapes","text":"","code":"if (FALSE) { # \\dontrun{ x <- NULL y <- 5 x %||% y  # Returns 5  x <- 10 x %||% y  # Returns 10 } # } if (FALSE) { # \\dontrun{ x <- NULL y <- 5 x %||% y  # Returns 5  x <- 10 x %||% y  # Returns 10 } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/handle_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle errors with custom messages — handle_error","title":"Handle errors with custom messages — handle_error","text":"Provides error handling customizable success, error, completion messages. Wraps expressions tryCatch block displays appropriate notifications. Provides error handling customizable success, error, completion messages. Wraps expressions tryCatch block displays appropriate notifications. Provides error handling customizable success, error, completion messages. Wraps expressions tryCatch block displays appropriate notifications.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/handle_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle errors with custom messages — handle_error","text":"","code":"handle_error(expr, success_msg = NULL, error_msg = NULL, finally_msg = NULL)  handle_error(expr, success_msg = NULL, error_msg = NULL, finally_msg = NULL)  handle_error(expr, success_msg = NULL, error_msg = NULL, finally_msg = NULL)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/handle_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle errors with custom messages — handle_error","text":"expr Expression evaluate success_msg Optional character string success notification error_msg Optional character string error notification finally_msg Optional character string completion notification","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/handle_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle errors with custom messages — handle_error","text":"Result expression NULL error occurs Result expression NULL error occurs Result expression NULL error occurs","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/handle_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle errors with custom messages — handle_error","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage result <- handle_error(   expr = { 1 + 1 },   success_msg = \"Calculation completed\" )  # With error handling result <- handle_error(   expr = { 1 / 0 },   error_msg = \"Division by zero detected\",   finally_msg = \"Operation finished\" ) } # }  if (FALSE) { # \\dontrun{ # Basic usage result <- handle_error(   expr = { 1 + 1 },   success_msg = \"Calculation completed\" )  # With error handling result <- handle_error(   expr = { 1 / 0 },   error_msg = \"Division by zero detected\",   finally_msg = \"Operation finished\" ) } # }  if (FALSE) { # \\dontrun{ # Basic usage result <- handle_error(   expr = { 1 + 1 },   success_msg = \"Calculation completed\" )  # With error handling result <- handle_error(   expr = { 1 / 0 },   error_msg = \"Division by zero detected\",   finally_msg = \"Operation finished\" ) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/import_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Import code hierarchy from JSON format — import_hierarchy","title":"Import code hierarchy from JSON format — import_hierarchy","text":"Reconstructs code hierarchy tree structure JSON string representation, restoring node properties relationships. Reconstructs code hierarchy tree structure JSON string representation, restoring node properties relationships.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/import_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import code hierarchy from JSON format — import_hierarchy","text":"","code":"import_hierarchy(json_string)  import_hierarchy(json_string)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/import_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import code hierarchy from JSON format — import_hierarchy","text":"json_string JSON string representation hierarchy","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/import_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import code hierarchy from JSON format — import_hierarchy","text":"Node object representing reconstructed hierarchy Node object representing reconstructed hierarchy","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/import_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import code hierarchy from JSON format — import_hierarchy","text":"","code":"if (FALSE) { # \\dontrun{ # Read JSON file json_string <- readLines(\"hierarchy.json\")  # Import hierarchy root <- import_hierarchy(json_string) print(root) } # }  if (FALSE) { # \\dontrun{ # Read JSON file json_string <- readLines(\"hierarchy.json\")  # Import hierarchy root <- import_hierarchy(json_string) print(root) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/init_data_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize data directory — init_data_dir","title":"Initialize data directory — init_data_dir","text":"Creates initializes package data directory user's home directory. Uses R_user_dir ensure compliance CRAN policies regarding file system access. operations performed explicitly requested user.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/init_data_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize data directory — init_data_dir","text":"","code":"init_data_dir()"},{"path":"http://liu-chao.site/textAnnotatoR/reference/init_data_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize data directory — init_data_dir","text":"Character string containing path data directory","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/init_data_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize data directory — init_data_dir","text":"","code":"if (FALSE) { # \\dontrun{ # Initialize the data directory data_dir <- init_data_dir()  # Check if directory exists dir.exists(data_dir)  # Check directory contents list.files(data_dir) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/is_ancestor.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if one node is an ancestor of another — is_ancestor","title":"Check if one node is an ancestor of another — is_ancestor","text":"Helper function check node ancestor another node code hierarchy, preventing circular references moving items. Helper function check node ancestor another node code hierarchy, preventing circular references moving items.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/is_ancestor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if one node is an ancestor of another — is_ancestor","text":"","code":"is_ancestor(potential_ancestor, node)  is_ancestor(potential_ancestor, node)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/is_ancestor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if one node is an ancestor of another — is_ancestor","text":"potential_ancestor Node object check potential ancestor node Node object check ancestry ","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/is_ancestor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if one node is an ancestor of another — is_ancestor","text":"Logical indicating whether potential_ancestor ancestor node Logical indicating whether potential_ancestor ancestor node","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/is_ancestor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if one node is an ancestor of another — is_ancestor","text":"","code":"if (FALSE) { # \\dontrun{ # Create hierarchy root <- Node$new(\"Root\") child <- root$AddChild(\"Child\") grandchild <- child$AddChild(\"Grandchild\")  # Check ancestry is_ancestor(root, grandchild)  # TRUE is_ancestor(grandchild, root)  # FALSE } # }  if (FALSE) { # \\dontrun{ # Create hierarchy root <- Node$new(\"Root\") child <- root$AddChild(\"Child\") grandchild <- child$AddChild(\"Grandchild\")  # Check ancestry is_ancestor(root, grandchild)  # TRUE is_ancestor(grandchild, root)  # FALSE } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Display interactive project load dialog — load_project_interactive","title":"Display interactive project load dialog — load_project_interactive","text":"Shows modal dialog loading project file selection functionality. Shows modal dialog loading project file selection functionality.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display interactive project load dialog — load_project_interactive","text":"","code":"load_project_interactive(rv, input, session, roots)  load_project_interactive(rv, input, session, roots)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display interactive project load dialog — load_project_interactive","text":"rv ReactiveValues object project state input Shiny input values session Shiny session object roots List root directories file selection","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display interactive project load dialog — load_project_interactive","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display interactive project load dialog — load_project_interactive","text":"","code":"if (FALSE) { # \\dontrun{ # In Shiny server function: observeEvent(input$load_button, {   load_project_interactive(rv, input, session, roots) }) } # } if (FALSE) { # \\dontrun{ # In Shiny server function: observeEvent(input$load_button, {   load_project_interactive(rv, input, session, roots) }) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project state from file — load_project_state","title":"Load project state from file — load_project_state","text":"Loads previously saved project state RDS file. Performs version checking data structure validation loading process. Loads previously saved project state RDS file. Performs version checking data structure validation loading process.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project state from file — load_project_state","text":"","code":"load_project_state(filename)  load_project_state(filename)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project state from file — load_project_state","text":"filename Character string specifying filename load","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load project state from file — load_project_state","text":"List containing loaded project state, NULL loading fails List containing loaded project state, NULL loading fails","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_project_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load project state from file — load_project_state","text":"","code":"if (FALSE) { # \\dontrun{ # Load a project project_state <- load_project_state(\"project_name\")  # Check loaded components str(project_state$text) str(project_state$annotations) } # }  if (FALSE) { # \\dontrun{ # Load a project project_state <- load_project_state(\"project_name\")  # Check loaded components str(project_state$text) str(project_state$annotations) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_selected_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Load selected project state — load_selected_project","title":"Load selected project state — load_selected_project","text":"Loads previously saved project state updates reactive values.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_selected_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load selected project state — load_selected_project","text":"","code":"load_selected_project(rv, input, session, project_name)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_selected_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load selected project state — load_selected_project","text":"rv Reactive values object update input Shiny input object session current Shiny session","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_selected_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load selected project state — load_selected_project","text":"Invisible NULL","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/load_selected_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load selected project state — load_selected_project","text":"","code":"if (FALSE) { # \\dontrun{ # In a Shiny server function: server <- function(input, output, session) {   rv <- reactiveValues(     text = \"\",     annotations = data.frame(),     codes = character(),     code_tree = Node$new(\"Root\")   )    observeEvent(input$load_button, {     load_selected_project(rv, input, session)   }) } } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/move_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Move item in code hierarchy — move_item","title":"Move item in code hierarchy — move_item","text":"Moves code theme new location hierarchy preserving properties child nodes. Checks circular references maintains integrity hierarchy structure. Moves code theme new location hierarchy preserving properties child nodes. Checks circular references maintains integrity hierarchy structure.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/move_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move item in code hierarchy — move_item","text":"","code":"move_item(node, item_path, new_parent_path)  move_item(node, item_path, new_parent_path)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/move_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move item in code hierarchy — move_item","text":"node Root node hierarchy tree item_path Character vector specifying current path item new_parent_path Character vector specifying path new parent","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/move_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move item in code hierarchy — move_item","text":"Updated node hierarchy item moved new location Updated node hierarchy item moved new location","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/move_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move item in code hierarchy — move_item","text":"","code":"if (FALSE) { # \\dontrun{ # Create hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme2 <- root$AddChild(\"Theme2\")  # Move Theme1 to be a child of Theme2 root <- move_item(root, c(\"Theme1\"), c(\"Theme2\")) } # }  if (FALSE) { # \\dontrun{ # Create hierarchy root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme2 <- root$AddChild(\"Theme2\")  # Move Theme1 to be a child of Theme2 root <- move_item(root, c(\"Theme1\"), c(\"Theme2\")) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_code_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot code distribution visualization — plot_code_distribution","title":"Plot code distribution visualization — plot_code_distribution","text":"Creates barplot visualization showing distribution codes annotations. plot includes rotated labels better readability handles empty NULL input data gracefully. Creates barplot visualization showing distribution codes annotations. plot includes rotated labels better readability handles empty NULL input data gracefully.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_code_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot code distribution visualization — plot_code_distribution","text":"","code":"plot_code_distribution(distribution, main = \"\", ...)  plot_code_distribution(distribution, main = \"\", ...)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_code_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot code distribution visualization — plot_code_distribution","text":"distribution List containing code distribution information: frequencies: Named numeric vector containing code frequencies main Character string specifying plot title ... Additional arguments passed barplot()","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_code_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot code distribution visualization — plot_code_distribution","text":"Invisible NULL, called side effect creating plot Invisible NULL, called side effect creating plot","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_code_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot code distribution visualization — plot_code_distribution","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample distribution data dist <- list(   frequencies = c(     \"Code1\" = 5,     \"Code2\" = 3,     \"Code3\" = 7   ) )  # Create basic plot plot_code_distribution(dist)  # Create plot with custom title plot_code_distribution(dist, main = \"Code Distribution\")  # Handle empty distribution plot_code_distribution(list(frequencies = integer(0))) } # } if (FALSE) { # \\dontrun{ # Create sample distribution data dist <- list(   frequencies = c(     \"Code1\" = 5,     \"Code2\" = 3,     \"Code3\" = 7   ) )  # Create basic plot plot_code_distribution(dist)  # Create plot with custom title plot_code_distribution(dist, main = \"Code Distribution\")  # Handle empty distribution plot_code_distribution(list(frequencies = integer(0))) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_overlap_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot code overlap patterns — plot_overlap_patterns","title":"Plot code overlap patterns — plot_overlap_patterns","text":"Creates barplot visualization code overlap patterns, showing frequency different code co-occurrences rotated labels better readability. Creates barplot visualization code overlap patterns, showing frequency different code co-occurrences rotated labels better readability.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_overlap_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot code overlap patterns — plot_overlap_patterns","text":"","code":"plot_overlap_patterns(overlaps, main = \"\", ...)  plot_overlap_patterns(overlaps, main = \"\", ...)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_overlap_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot code overlap patterns — plot_overlap_patterns","text":"overlaps List containing overlap information: combinations: List containing frequencies code co-occurrences main Character string plot title ... Additional arguments passed barplot()","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_overlap_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot code overlap patterns — plot_overlap_patterns","text":"Invisible NULL, called side effect creating plot Invisible NULL, called side effect creating plot","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_overlap_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot code overlap patterns — plot_overlap_patterns","text":"","code":"if (FALSE) { # \\dontrun{ overlaps <- list(   combinations = list(     frequencies = c(\"A-B\" = 2, \"B-C\" = 3)   ) ) plot_overlap_patterns(overlaps, main = \"Code Overlaps\") } # } if (FALSE) { # \\dontrun{ overlaps <- list(   combinations = list(     frequencies = c(\"A-B\" = 2, \"B-C\" = 3)   ) ) plot_overlap_patterns(overlaps, main = \"Code Overlaps\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_sequence_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot code sequence patterns — plot_sequence_patterns","title":"Plot code sequence patterns — plot_sequence_patterns","text":"Creates barplot visualization code sequence patterns, showing frequency different code transitions rotated labels better readability. Creates barplot visualization code sequence patterns, showing frequency different code transitions rotated labels better readability.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_sequence_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot code sequence patterns — plot_sequence_patterns","text":"","code":"plot_sequence_patterns(sequences, main = \"\", ...)  plot_sequence_patterns(sequences, main = \"\", ...)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_sequence_patterns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot code sequence patterns — plot_sequence_patterns","text":"sequences List containing sequence information: transitions: List code transitions main Character string plot title ... Additional arguments passed barplot()","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_sequence_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot code sequence patterns — plot_sequence_patterns","text":"Invisible NULL, called side effect creating plot Invisible NULL, called side effect creating plot","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/plot_sequence_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot code sequence patterns — plot_sequence_patterns","text":"","code":"if (FALSE) { # \\dontrun{ sequences <- list(   transitions = list(     c(from = \"A\", to = \"B\"),     c(from = \"B\", to = \"C\")   ) ) plot_sequence_patterns(sequences, main = \"Code Sequences\") } # } if (FALSE) { # \\dontrun{ sequences <- list(   transitions = list(     c(from = \"A\", to = \"B\"),     c(from = \"B\", to = \"C\")   ) ) plot_sequence_patterns(sequences, main = \"Code Sequences\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/process_comparison_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Process comparison file — process_comparison_file","title":"Process comparison file — process_comparison_file","text":"Processes uploaded comparison files, handling different file formats (CSV, JSON) ensuring proper data structure types comparison analysis. Processes uploaded comparison files, handling different file formats (CSV, JSON) ensuring proper data structure types comparison analysis.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/process_comparison_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process comparison file — process_comparison_file","text":"","code":"process_comparison_file(filepath)  process_comparison_file(filepath)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/process_comparison_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process comparison file — process_comparison_file","text":"filepath Character string specifying path comparison file","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/process_comparison_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process comparison file — process_comparison_file","text":"Data frame containing processed annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation Data frame containing processed annotations columns: start: numeric, starting position annotation end: numeric, ending position annotation code: character, code applied annotation","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/process_comparison_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process comparison file — process_comparison_file","text":"","code":"if (FALSE) { # \\dontrun{ # Process a CSV file annotations_csv <- process_comparison_file(\"annotations.csv\")  # Process a JSON file annotations_json <- process_comparison_file(\"annotations.json\") } # }  if (FALSE) { # \\dontrun{ # Process a CSV file annotations_csv <- process_comparison_file(\"annotations.csv\")  # Process a JSON file annotations_json <- process_comparison_file(\"annotations.json\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/restore_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore a node and its children in the hierarchy — restore_node","title":"Restore a node and its children in the hierarchy — restore_node","text":"Helper function recursively restore node children moving items code hierarchy. Helper function recursively restore node children moving items code hierarchy.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/restore_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore a node and its children in the hierarchy — restore_node","text":"","code":"restore_node(parent, node_data)  restore_node(parent, node_data)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/restore_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore a node and its children in the hierarchy — restore_node","text":"parent Parent Node object node restored node_data List containing node data restore: name: Character string node name type: Character string specifying node type description: Character string node description created: POSIXct creation timestamp children: List child nodes","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/restore_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore a node and its children in the hierarchy — restore_node","text":"New Node object restored data children New Node object restored data children","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/restore_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restore a node and its children in the hierarchy — restore_node","text":"","code":"if (FALSE) { # \\dontrun{ # Create parent node parent <- Node$new(\"Parent\")  # Create node data node_data <- list(   name = \"Child\",   type = \"theme\",   description = \"A child node\",   created = Sys.time(),   children = list() )  # Restore node new_node <- restore_node(parent, node_data) } # }  if (FALSE) { # \\dontrun{ # Create parent node parent <- Node$new(\"Parent\")  # Create node data node_data <- list(   name = \"Child\",   type = \"theme\",   description = \"A child node\",   created = Sys.time(),   children = list() )  # Restore node new_node <- restore_node(parent, node_data) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Save annotated text as HTML document — save_as_html","title":"Save annotated text as HTML document — save_as_html","text":"Creates HTML document containing annotated text proper styling code highlights formatting. Creates HTML document containing annotated text proper styling code highlights formatting.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save annotated text as HTML document — save_as_html","text":"","code":"save_as_html(filename, rv)  save_as_html(filename, rv)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save annotated text as HTML document — save_as_html","text":"filename Character string specifying output file path rv ReactiveValues object containing: text: Original text content annotations: Data frame annotations code_colors: Named character vector code colors","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save annotated text as HTML document — save_as_html","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save annotated text as HTML document — save_as_html","text":"","code":"if (FALSE) { # \\dontrun{ # Create HTML with annotations rv <- list(   text = \"Sample text\",   annotations = data.frame(     start = 1, end = 6,     code = \"code1\"   ),   code_colors = c(code1 = \"#FF0000\") ) save_as_html(\"output.html\", rv) } # } if (FALSE) { # \\dontrun{ # Create HTML with annotations rv <- list(   text = \"Sample text\",   annotations = data.frame(     start = 1, end = 6,     code = \"code1\"   ),   code_colors = c(code1 = \"#FF0000\") ) save_as_html(\"output.html\", rv) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Save annotated text as plain text — save_as_text","title":"Save annotated text as plain text — save_as_text","text":"Creates plain text file containing annotated text code markers. Creates plain text file containing annotated text code markers.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save annotated text as plain text — save_as_text","text":"","code":"save_as_text(filename, rv)  save_as_text(filename, rv)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save annotated text as plain text — save_as_text","text":"filename Character string specifying output file path rv ReactiveValues object containing: text: Original text content annotations: Data frame annotations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save annotated text as plain text — save_as_text","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_as_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save annotated text as plain text — save_as_text","text":"","code":"if (FALSE) { # \\dontrun{ rv <- list(   text = \"Sample text\",   annotations = data.frame(     start = 1, end = 6,     code = \"code1\"   ) ) save_as_text(\"output.txt\", rv) } # } if (FALSE) { # \\dontrun{ rv <- list(   text = \"Sample text\",   annotations = data.frame(     start = 1, end = 6,     code = \"code1\"   ) ) save_as_text(\"output.txt\", rv) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Display interactive project save dialog — save_project_interactive","title":"Display interactive project save dialog — save_project_interactive","text":"Shows modal dialog saving project directory selection project name input. Shows modal dialog saving project directory selection project name input.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display interactive project save dialog — save_project_interactive","text":"","code":"save_project_interactive(rv, input, session, volumes)  save_project_interactive(rv, input, session, volumes)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display interactive project save dialog — save_project_interactive","text":"rv ReactiveValues object containing project state input Shiny input values session Shiny session object volumes List available storage volumes","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display interactive project save dialog — save_project_interactive","text":"Invisible NULL, called side effect Invisible NULL, called side effect","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display interactive project save dialog — save_project_interactive","text":"","code":"if (FALSE) { # \\dontrun{ # In Shiny server function: observeEvent(input$save_button, {   save_project_interactive(rv, input, session, volumes) }) } # } if (FALSE) { # \\dontrun{ # In Shiny server function: observeEvent(input$save_button, {   save_project_interactive(rv, input, session, volumes) }) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Save project state to file — save_project_state","title":"Save project state to file — save_project_state","text":"Saves current project state including text, annotations, codes, code tree, metadata RDS file. Creates projects directory exist. Saves current project state including text, annotations, codes, code tree, metadata RDS file. Creates projects directory exist.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save project state to file — save_project_state","text":"","code":"save_project_state(state, filename)  save_project_state(state, filename)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save project state to file — save_project_state","text":"state List containing project state elements: text: Character string current text annotations: Data frame annotations codes: Character vector codes code_tree: Node object representing code hierarchy code_colors: Named vector code colors memos: List memos code_descriptions: List code descriptions filename Character string specifying filename saving","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save project state to file — save_project_state","text":"Invisible NULL. Called side effect saving project state. Invisible NULL. Called side effect saving project state.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/save_project_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save project state to file — save_project_state","text":"","code":"if (FALSE) { # \\dontrun{ state <- list(   text = \"Sample text\",   annotations = data.frame(     start = 1,     end = 5,     code = \"code1\",     stringsAsFactors = FALSE   ),   codes = \"code1\",   code_tree = Node$new(\"Root\"),   code_colors = c(code1 = \"#FF0000\"),   memos = list(),   code_descriptions = list() ) save_project_state(state, \"my_project\") } # }  if (FALSE) { # \\dontrun{ state <- list(   text = \"Sample text\",   annotations = data.frame(     start = 1,     end = 5,     code = \"code1\",     stringsAsFactors = FALSE   ),   codes = \"code1\",   code_tree = Node$new(\"Root\"),   code_colors = c(code1 = \"#FF0000\"),   memos = list(),   code_descriptions = list() ) save_project_state(state, \"my_project\") } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"textAnnotatoR: Interactive Text Annotation Tool with Shiny GUI — textAnnotatoR-package","title":"textAnnotatoR: Interactive Text Annotation Tool with Shiny GUI — textAnnotatoR-package","text":"comprehensive text annotation tool built Shiny. Provides interactive graphical user interface coding text documents, managing code hierarchies, creating memos, analyzing coding patterns. Features include code co-occurrence analysis, visualization coding patterns, comparison multiple coding sets, export capabilities. Supports collaborative qualitative research standardized annotation formats analysis tools.","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"textAnnotatoR: Interactive Text Annotation Tool with Shiny GUI — textAnnotatoR-package","text":"Maintainer: Chao Liu chaoliu@cedarville.edu (ORCID) [copyright holder]","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Annotation Tool for R — textAnnotatoR","title":"Text Annotation Tool for R — textAnnotatoR","text":"Shiny application interactive text annotation analysis Provides interactive graphical user interface qualitative text analysis, allowing users annotate text, manage codes, create memos, visualize coding patterns.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Text Annotation Tool for R — textAnnotatoR","text":"package includes tools : Text annotation coding Code management organization Memo creation linking Project management Visualization coding patterns Export annotations analyses","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Text Annotation Tool for R — textAnnotatoR","text":"package provides functionality users interactively save files Shiny interface. file operations explicitly initiated users file dialogs, files written automatically user's system without direct action consent.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Text Annotation Tool for R — textAnnotatoR","text":"package requires following packages: shiny data.tree jsonlite shinydashboard DT readtext magrittr","code":""},{"path":[]},{"path":"http://liu-chao.site/textAnnotatoR/reference/textAnnotatoR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Text Annotation Tool for R — textAnnotatoR","text":"Chao Liu","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/update_text_display.html","id":null,"dir":"Reference","previous_headings":"","what":"Update text display with annotations — update_text_display","title":"Update text display with annotations — update_text_display","text":"Creates HTML representation text annotations, highlighting codes assigned colors.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/update_text_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update text display with annotations — update_text_display","text":"","code":"update_text_display(rv)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/update_text_display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update text display with annotations — update_text_display","text":"rv Reactive values object containing text annotations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/update_text_display.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update text display with annotations — update_text_display","text":"HTML string containing formatted text annotations","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/validate_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate directory access — validate_directory","title":"Validate directory access — validate_directory","text":"Checks directory exists accessible reading writing. function performs comprehensive checks ensure directory can used file operations.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/validate_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate directory access — validate_directory","text":"","code":"validate_directory(dir_path)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/validate_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate directory access — validate_directory","text":"dir_path Character string containing directory path validate","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/validate_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate directory access — validate_directory","text":"Logical indicating whether directory valid accessible","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/validate_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate directory access — validate_directory","text":"","code":"if (FALSE) { # \\dontrun{ # Validate project directory project_dir <- get_project_dir() is_valid <- validate_directory(project_dir)  # Validate export directory export_dir <- get_export_dir() is_valid <- validate_directory(export_dir) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/reference/visualize_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate visual representation of code hierarchy — visualize_hierarchy","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"Creates HTML tree visualization code hierarchy proper indentation, icons, interactive elements. Creates HTML tree visualization code hierarchy proper indentation, icons, interactive elements.","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/visualize_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"","code":"visualize_hierarchy(node)  visualize_hierarchy(node)"},{"path":"http://liu-chao.site/textAnnotatoR/reference/visualize_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"node Root node hierarchy tree attributes: name: character, node name type: character, \"theme\" \"code\" description: character, node description children: list child nodes","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/visualize_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"Character string containing HTML markup tree visualization Character string containing HTML markup tree visualization","code":""},{"path":"http://liu-chao.site/textAnnotatoR/reference/visualize_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate visual representation of code hierarchy — visualize_hierarchy","text":"","code":"if (FALSE) { # \\dontrun{ root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$type <- \"theme\" code1 <- theme1$AddChild(\"Code1\") code1$type <- \"code\" html <- visualize_hierarchy(root) } # } if (FALSE) { # \\dontrun{ root <- Node$new(\"Root\") theme1 <- root$AddChild(\"Theme1\") theme1$type <- \"theme\" code1 <- theme1$AddChild(\"Code1\") code1$type <- \"code\" html <- visualize_hierarchy(root) } # }"},{"path":"http://liu-chao.site/textAnnotatoR/news/index.html","id":"textannotator-011","dir":"Changelog","previous_headings":"","what":"textAnnotatoR 0.1.1","title":"textAnnotatoR 0.1.1","text":"Initial CRAN submission.","code":""}]
