% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotate_gui.R, R/hierarchy.R
\name{move_item}
\alias{move_item}
\title{Move item in code hierarchy}
\usage{
move_item(node, item_path, new_parent_path)

move_item(node, item_path, new_parent_path)
}
\arguments{
\item{node}{Root node of the hierarchy tree}

\item{item_path}{Character vector specifying the current path to the item}

\item{new_parent_path}{Character vector specifying the path to the new parent}
}
\value{
Updated node hierarchy with item moved to new location

Updated node hierarchy with item moved to new location
}
\description{
Moves a code or theme to a new location in the hierarchy while preserving its
properties and child nodes. Checks for circular references and maintains the
integrity of the hierarchy structure.

Moves a code or theme to a new location in the hierarchy while preserving its
properties and child nodes. Checks for circular references and maintains the
integrity of the hierarchy structure.
}
\examples{
\dontrun{
# Create hierarchy
root <- Node$new("Root")
theme1 <- root$AddChild("Theme1")
theme2 <- root$AddChild("Theme2")

# Move Theme1 to be a child of Theme2
root <- move_item(root, c("Theme1"), c("Theme2"))
}

\dontrun{
# Create hierarchy
root <- Node$new("Root")
theme1 <- root$AddChild("Theme1")
theme2 <- root$AddChild("Theme2")

# Move Theme1 to be a child of Theme2
root <- move_item(root, c("Theme1"), c("Theme2"))
}

}
\keyword{internal}
